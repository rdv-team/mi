Функция ЗарегистрироватьИзменениеОбъекта(ВыгружаемыйОбъект, ПравилоРегистрации, Знач ИдентификаторСобытия = Неопределено
																		, Знач ИдентификаторСообщения = Неопределено) Экспорт
	
	Если ИдентификаторСообщения = Неопределено Тогда
		ИдентификаторСообщения = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	Если ИдентификаторСобытия = Неопределено Тогда
		ИдентификаторСобытия = ИдентификаторСообщения;
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	ТекущаяДатаВМиллисекундах = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ТекущаяДатаUTC = ТекущаяУниверсальнаяДата();
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.ДатаРегистрацииВМиллисекундах = ТекущаяДатаВМиллисекундах;
	Запись.ДатаРегистрации = ТекущаяДата;
	Запись.ДатаРегистрацииUTC = ТекущаяДатаUTC;
	Запись.ИдентификаторСообщения = ИдентификаторСообщения;
	Запись.ИдентификаторСобытия = ИдентификаторСобытия;
	Запись.ВыгружаемыйОбъект = ВыгружаемыйОбъект;
	Запись.Статус = Перечисления.рдв_СтатусыРегистрацииИзменений.Новое;
	Запись.ВнешняяСистема = ПравилоРегистрации.ВнешняяСистема;
	Запись.АдресМетода = ПравилоРегистрации.АдресМетода;
	Запись.ВидСообщения = ПравилоРегистрации.ВидСообщения;
	
	Запись.Записать();
	
	Возврат ИдентификаторСообщения;
	
КонецФункции

Процедура ОбновитьСтатусРегистрации(ВнешняяСистема, ИдентификаторСообщения, Статус, ТекстОшибки = "") Экспорт
	
	НачатьТранзакцию();

	Попытка;
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.рдв_РегистрацияИзменений");
		ЭлементБлокировки.УстановитьЗначение("ИдентификаторСообщения", ИдентификаторСообщения);
		ЭлементБлокировки.УстановитьЗначение("ВнешняяСистема", ВнешняяСистема);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();	
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);
		НаборЗаписей.Отбор.ВнешняяСистема.Установить(ВнешняяСистема);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			Запись = НаборЗаписей[0];
			Запись.Статус = Статус;
			Запись.ТекстОшибки = ТекстОшибки;
		КонецЕсли;
		НаборЗаписей.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
		
	
КонецПроцедуры

Процедура УдалитьРегистрацию(ВнешняяСистема, ИдентификаторСообщения, ВыгружаемыйОбъект) Экспорт

	НачатьТранзакцию();
	Попытка;
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);
		НаборЗаписей.Отбор.ВнешняяСистема.Установить(ВнешняяСистема);
		НаборЗаписей.Записать();
		//УдаляемыйОбъект = ВыгружаемыйОбъект.ПолучитьОбъект();
		//УдаляемыйОбъект.Удалить();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры
