
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Ключ.Пустой() И Не Параметры.ЗначениеКопирования.Пустой() Тогда
		
		ОчиститьИндивидуальныеСвойства();
		
		ЗначениеКопирования = рдв_ОбщегоНазначения.ЗначенияЗаписиРегистра(Параметры.ЗначениеКопирования);
		ПрочитатьПараметрыОчереди(ЗначениеКопирования.ХранилищеПараметров);
		
		КоллекцияПараметровМодифицирована = Истина;
		
	КонецЕсли;
	
	Если Параметры.Ключ.Пустой() И Не ЗначениеЗаполнено(ТипКоллекцииПараметров) Тогда
		
		ТипКоллекцииПараметров = "Структура";
		
	КонецЕсли;
		
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПрочитатьПараметрыОчереди(ТекущийОбъект.ХранилищеПараметров);
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если КоллекцияПараметровМодифицирована Тогда
		
		НовыеПараметры = Неопределено;
		ЗаписатьПараметрыОчереди(НовыеПараметры);
		
		ПараметрыДляЗаписи = рдв_РаботаСОчередями.ДанныеПараметровЗаписиОчереди(НовыеПараметры);
		ПредставлениеПараметров = рдв_РаботаСОчередями.ПредставлениеПараметровЗаписиОчереди(НовыеПараметры);
		
		ТекущийОбъект.ХранилищеПараметров = ПараметрыДляЗаписи.Хранилище;
		ТекущийОбъект.ХешПараметров = ПараметрыДляЗаписи.Хеш;
		ТекущийОбъект.ПредставлениеПараметров = ПредставлениеПараметров;
		
	КонецЕсли;
	
	Если Параметры.Ключ.Пустой() Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ДатаСозданияUTC", ТекущаяУниверсальнаяДата());
		ЗначенияЗаполнения.Вставить("ДатаИзмененияСостоянияUTC", ТекущаяУниверсальнаяДата());
		// RM-2481 14.07.2022 tosina@rdv-it.ru Закомментирована и заменена 1 строка. Использовать в место "ТекущаяДата()" функцию "ТекущаяДатаСеанса()"				
		//ЗначенияЗаполнения.Вставить("ДатаСоздания", ТекущаяДата());
		ЗначенияЗаполнения.Вставить("ДатаСоздания", ТекущаяДатаСеанса());
		
		Для Каждого Элемент Из ЗначенияЗаполнения Цикл
			Если Не ЗначениеЗаполнено(Запись[Элемент.Ключ]) Тогда
				Запись[Элемент.Ключ] = Элемент.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	КоллекцияПараметровМодифицирована = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыОчереди

&НаКлиенте
Процедура ПараметрыОчередиПриИзменении(Элемент)
	
	Если ТипКоллекцииПараметров = "Массив" Тогда
		
		ПронумероватьЭлементыКоллекцииПараметров(ПараметрыОчереди);
		
	КонецЕсли;
	
	КоллекцияПараметровМодифицирована = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОчередиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И Не ОтменаРедактирования Тогда
		КоличествоПараметров = ПараметрыОчереди.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОчередиПослеУдаления(Элемент)
	
	КоличествоПараметров = ПараметрыОчереди.Количество();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьПараметрыОчереди(Источник)
	
	ПараметрыОчереди.Очистить();
	ПараметрыОчередиИзХранилища = Источник.Получить();
	
	Если ПараметрыОчередиИзХранилища = Неопределено Тогда
		
		// Параметры отсутствуют.
		ТипКоллекцииПараметров = "";
		
	ИначеЕсли ТипЗнч(ПараметрыОчередиИзХранилища) = Тип("Структура") Тогда
		
		ТипКоллекцииПараметров = "Структура";
		Для Каждого КлючИЗначение Из ПараметрыОчередиИзХранилища Цикл
			СтрокаПараметра = ПараметрыОчереди.Добавить();
			СтрокаПараметра.Ключ = КлючИЗначение.Ключ;
			СтрокаПараметра.Значение = КлючИЗначение.Значение;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ПараметрыОчередиИзХранилища) = Тип("Соответствие") Тогда
		
		ТипКоллекцииПараметров = "Соответствие";
		Для Каждого КлючИЗначение Из ПараметрыОчередиИзХранилища Цикл
			СтрокаПараметра = ПараметрыОчереди.Добавить();
			СтрокаПараметра.Ключ = КлючИЗначение.Ключ;
			СтрокаПараметра.Значение = КлючИЗначение.Значение;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ПараметрыОчередиИзХранилища) = Тип("Массив") Тогда
		
		ТипКоллекцииПараметров = "Массив";
		Для Каждого Элемент Из ПараметрыОчередиИзХранилища Цикл
			СтрокаПараметра = ПараметрыОчереди.Добавить();
			СтрокаПараметра.Значение = Элемент;
		КонецЦикла;		
		ПронумероватьЭлементыКоллекцииПараметров(ПараметрыОчереди);
		
	Иначе
		
		ТипКоллекцииПараметров = "Значение";
		СтрокаПараметра = ПараметрыОчереди.Добавить();
		СтрокаПараметра.Ключ = "<Значение>";
		СтрокаПараметра.Значение = ПараметрыОчередиИзХранилища;
		
	КонецЕсли;
	
	КоллекцияПараметровМодифицирована = Ложь;
	КоличествоПараметров = ПараметрыОчереди.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыОчереди(Приемник)
	
	Если ТипКоллекцииПараметров = "Значение" Тогда
		
		Приемник = ПараметрыОчереди[0].Значение;
		
	ИначеЕсли ТипКоллекцииПараметров = "Структура" Тогда
		
		Приемник = Новый Структура;
		Для Каждого Элемент Из ПараметрыОчереди Цикл
			Приемник.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		
	ИначеЕсли ТипКоллекцииПараметров = "Соответствие" Тогда
		
		Приемник = Новый Соответствие;
		Для Каждого Элемент Из ПараметрыОчереди Цикл
			Приемник.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		
	ИначеЕсли ТипКоллекцииПараметров = "Массив" Тогда
		
		Приемник = Новый Массив;		
		Для Каждого Элемент Из ПараметрыОчереди Цикл
			Приемник.Добавить(Элемент.Значение);
		КонецЦикла;
		
	Иначе
		
		Приемник = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	ПараметрыЗаданыЗначением = (ТипКоллекцииПараметров = "Значение");
	ПараметрыЗаданыСтруктурой = (ТипКоллекцииПараметров = "Структура");
	ПараметрыЗаданыСоответствием = (ТипКоллекцииПараметров = "Соответствие");
	ПараметрыЗаданыМассивом = (ТипКоллекцииПараметров = "Массив");
	
	Элементы.ПараметрыОчереди.ИзменятьСоставСтрок = Не ПараметрыЗаданыЗначением;
	Элементы.ПараметрыОчереди.ИзменятьПорядокСтрок = Не ПараметрыЗаданыЗначением;
	
	Элементы.ПараметрыОчередиКлюч.ТолькоПросмотр = Не ПараметрыЗаданыСтруктурой И Не ПараметрыЗаданыСоответствием;
	
	ТипКлюча = ?(ПараметрыЗаданыСтруктурой, "Строка", "Неопределено");
	Элементы.ПараметрыОчередиКлюч.ОграничениеТипа = Новый ОписаниеТипов(ТипКлюча);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьИндивидуальныеСвойства()
	
	ПустаяЗапись = РегистрыСведений.рдв_ОчередиОбработкиДанных.СоздатьМенеджерЗаписи();
	ПустаяЗапись.Заполнить(Неопределено);
	
	ОчищаемыеСвойства = "
	|Состояние
	|ДатаСоздания
	|ДатаИзмененияСостоянияUTC
	|ИдентификаторЗаписи
	|ИдентификаторПотока
	|РазделительПотока
	|ОстановленаОбработка
	|КоличествоПопытокОбработки
	|ДатаСозданияUTC
	|ДатаСледующейПопыткиUTC
	|ДатаНачалаОбработкиUTC
	|";
	
	ОчищаемыеСвойства = СтрЗаменить(СокрЛП(ОчищаемыеСвойства), Символы.ПС, ",");
	
	ЗаполнитьЗначенияСвойств(Запись, ПустаяЗапись, ОчищаемыеСвойства);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПронумероватьЭлементыКоллекцииПараметров(ПараметрыОчереди)
	
	Индекс = 0;
	
	Для Каждого Элемент Из ПараметрыОчереди Цикл
		
		Элемент.Ключ = СтрШаблон("[%1]", Формат(Индекс, "ЧН=; ЧГ="));
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
