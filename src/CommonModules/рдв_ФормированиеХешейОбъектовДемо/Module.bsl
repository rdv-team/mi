
#Область ПрограммныйИнтерфейс

// Инициализировать правила расчета хеша правилами согласно бизнес процессов
// 
// Параметры:
//  ПравилаРасчетаХеша - ТаблицаЗначений -
//  
Процедура ИнициализироватьПравилаРасчетаХеша(ПравилаРасчетаХеша) Экспорт
	
	// Существует правило по Контрагенту, но для части документов нужен другой алгоритм.
	// Добавляем новое правило, задаем это правило реквизитов контрагента в нужных документах (Например, Заказ покупателя)
	ДобавитьПРХ_Контрагент_ИННКПП(ПравилаРасчетаХеша);
	// В существующих правилах меняем правило расчета по реквизиту контрагент, на правило выше 
	ИзменитьПРХ_ЗаказПокупателя(ПравилаРасчетаХеша);
	// Для организации создаем еще одно правило, по итогу у организации будет расчитано 2 значения хеша
	ДобавитьПРХ_Организации_ИННКПП(ПравилаРасчетаХеша);
	
КонецПроцедуры

// Указыает по каким правил формировать хеш для объекта. Если не определено то правилам таблицы правил расчет по объекту метаданных
// 
// Параметры:
//  ОбъектОчереди - ЛюбаяСсылка - 
//  ПравилаРасчетаХеша - ТаблицаЗначений - см.рдв_МенеджерОбмена.ИнициализироватьПравилаКонвертации()
//  ПравилаДляРасчетаОбъекта - Массив из СтрокаТаблицыЗначений - массив для выбранных правил
//
Процедура ПравилаРасчетаХеша(ОбъектОчереди, ПравилаРасчетаХеша, ПравилаДляРасчетаОбъекта) Экспорт
	
	ОбъектМетаданных = ОбъектОчереди.Метаданные();
	
	// Т.к. контрагента 2 записи, то указываем системе по какому правилу считать саму ссылку
	Если ОбъектМетаданных = Метаданные.Справочники._ДемоКонтрагенты Тогда
		
		Правило = НайтиПРХПоИмени(ПравилаРасчетаХеша, "Справочник_Контрагенты");
		ПравилаДляРасчетаОбъекта.Добавить(Правило);
	
	// У организации 2 правила, считаем по обоим	
	ИначеЕсли ОбъектМетаданных = Метаданные.Справочники._ДемоОрганизации Тогда
		
		Правила = НайтиПРХ(ПравилаРасчетаХеша, ОбъектМетаданных);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПравилаДляРасчетаОбъекта, Правила);
		
	КонецЕсли;
	
КонецПроцедуры
  
// Расчет хеша в обход правил, по своим алгоритмам
// 
// Параметры:
//  ОбъектОчереди - ЛюбаяСсылка - 
//  ПравилаРасчетаХеша - ТаблицаЗначений - см.рдв_МенеджерОбмена.ИнициализироватьПравилаКонвертации()
//  ТаблицаХешей - ТаблицаЗначений -
// 
//
Процедура ХешРассчитать(ОбъектОчереди, ПравилаРасчетаХеша, ТаблицаХешей) Экспорт
	
	МетаданныеОбъекта = ОбъектОчереди.Метаданные();
	// для _ДемоСписаниеТоваров предполагается расчет только по движениям, поэтому правила не подходят,
	// считаем отдельно.
	Если МетаданныеОбъекта = Метаданные.Документы._ДемоСписаниеТоваров Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	_ДемоОстаткиТоваровВМестахХранения.Период КАК Период,
		|	_ДемоОстаткиТоваровВМестахХранения.Регистратор КАК Регистратор,
		|	_ДемоОстаткиТоваровВМестахХранения.НомерСтроки КАК НомерСтроки,
		|	_ДемоОстаткиТоваровВМестахХранения.Активность КАК Активность,
		|	_ДемоОстаткиТоваровВМестахХранения.ВидДвижения КАК ВидДвижения,
		|	_ДемоОстаткиТоваровВМестахХранения.Номенклатура КАК Номенклатура,
		|	_ДемоОстаткиТоваровВМестахХранения.МестоХранения КАК МестоХранения,
		|	_ДемоОстаткиТоваровВМестахХранения.Организация КАК Организация,
		|	_ДемоОстаткиТоваровВМестахХранения.Количество КАК Количество
		|ИЗ
		|	РегистрНакопления._ДемоОстаткиТоваровВМестахХранения КАК _ДемоОстаткиТоваровВМестахХранения
		|ГДЕ
		|	_ДемоОстаткиТоваровВМестахХранения.Регистратор = &Регистратор";
		Запрос.УстановитьПараметр("Регистратор", ОбъектОчереди);
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		
		Хеш = рдв_ХешиОбъектов.ХешСтандартныйКоллекции(ТЗ);
		ВидХеша = Справочники.рдв_ВидыХешей.Предопределенный("Актуальный");
		рдв_ХешиОбъектов.ХешВТаблицуХешей(ТаблицаХешей, ВидХеша, Хеш);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьПРХ_Контрагент_ИННКПП(ПравилаРасчетаХеша)

	ПравилоРасчетаХеша = ДобавитьПРХ(ПравилаРасчетаХеша, Метаданные.Справочники._ДемоКонтрагенты);
	ПравилоРасчетаХеша.ИмяПРХ = "Контрагент_ИННКПП";
	КонвертацияШапки = ПравилоРасчетаХеша.КонвертацияШапки;
	ДобавитьПРС(КонвертацияШапки, "ИНН");
	ДобавитьПРС(КонвертацияШапки, "КПП");

КонецПроцедуры

Процедура ДобавитьПРХ_Организации_ИННКПП(ПравилаРасчетаХеша)

	ПравилоРасчетаХеша = ДобавитьПРХ(ПравилаРасчетаХеша, Метаданные.Справочники._ДемоОрганизации);
	ПравилоРасчетаХеша.ИмяПРХ = "Организация_ИННКПП";
	ПравилоРасчетаХеша.ВидХеша = Справочники.рдв_ВидыХешей.Предопределенный("ИННКПП");
	КонвертацияШапки = ПравилоРасчетаХеша.КонвертацияШапки;
	ДобавитьПРС(КонвертацияШапки, "ИНН");
	ДобавитьПРС(КонвертацияШапки, "КПП");

КонецПроцедуры

Процедура ИзменитьПРХ_ЗаказПокупателя(ПравилаРасчетаХеша)

	ПравилаПоМетаданным = НайтиПРХ(ПравилаРасчетаХеша, Метаданные.Документы._ДемоЗаказПокупателя);
	
	Для Каждого ПравилоРасчетаХеша Из ПравилаПоМетаданным Цикл
		
		КонвертацияШапки = ПравилоРасчетаХеша.КонвертацияШапки;
		Свойство = НайтиПРС(КонвертацияШапки, "Контрагент");
		Свойство.ИмяПРХ = "Контрагент_ИННКПП";
		
	КонецЦикла;

КонецПроцедуры

#Область ПравилаРасчетаХеша

Функция ДобавитьПРХ(ПравилаРасчетаХеша, ОбъектМетаданных, ВидХеша=Неопределено)
	
	Возврат рдв_ФормированиеХешейОбъектов.ДобавитьПравилоРасчета(ПравилаРасчетаХеша, ОбъектМетаданных, ВидХеша);
	
КонецФункции

Функция ДобавитьПРС(Свойства, ИмяСвойства, ИмяПРХ="")
	
	Возврат рдв_ФормированиеХешейОбъектов.ДобавитьПравилоРасчетаСвойства(Свойства, ИмяСвойства, ИмяПРХ);
	
КонецФункции

Функция НайтиПРХ(ПравилаРасчетаХеша, ОбъектМетаданных)
	
	Возврат рдв_ФормированиеХешейОбъектов.НайтиПравилаРасчета(ПравилаРасчетаХеша, ОбъектМетаданных);
	
КонецФункции

Функция НайтиПРХПоИмени(ПравилаРасчетаХеша, Имя)
	
	Возврат рдв_ФормированиеХешейОбъектов.НайтиПравилоРасчетаПоИмени(ПравилаРасчетаХеша, Имя);
	
КонецФункции

Функция НайтиПРС(Свойства, ИмяСвойства)
	
	Возврат рдв_ФормированиеХешейОбъектов.НайтиПравилоРасчетаСвойства(Свойства, ИмяСвойства);
	
КонецФункции

#КонецОбласти

#КонецОбласти
