
#Область ОбработчикиФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВызватьИсключение НСтр("ru = 'Запрещено добавлять новые элементы'");
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.КоличествоПопыток) Тогда
		ЗаполнитьТипОчередиПоУмолчанию();
	КонецЕсли;

	ЭтоФайловаяИБ = рдв_РаботаСОчередями.ЭтоФайловаяИБ();
	МинПериодРегламентаСек = рдв_РаботаСОчередями.МинимальныйПериодЗапускаРегламента();
	
	СтруктураРасписание = рдв_РаботаСОчередями.РасписаниеОбработкиОчереди(Объект.Ссылка);
	РасписаниеОбработки = СтруктураРасписание.Расписание;
	ИспользованиеРегламента = СтруктураРасписание.Использование;
	
	УправлениеЭлементами(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьНадписьРасписанияОбработки(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.рдв_ТипыОчередейОбработкиДанных.УстановитьРасписаниеОчереди(
		ТекущийОбъект, РасписаниеОбработки, ИспользованиеРегламента);

	УстановитьНадписьРасписанияОбработки(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаполнитьДанныеЭлементаПоУмолчанию(Команда)

	ЗаполнитьТипОчередиПоУмолчанию();	
	
	ОбновитьОтображениеДанных();

КонецПроцедуры
	 
#КонецОбласти

#Область ОбработчикиЭлементов

&НаКлиенте
Процедура ИспользованиеРегламентаПриИзменении(Элемент)
	УправлениеЭлементами(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПериодОбработкиОчередиСекПриИзменении(Элемент)

	Если ЭтоФайловаяИБ И Объект.ПериодОбработкиОчередиСек < МинПериодРегламентаСек Тогда
		ТекстСообщения = НСтр("ru = 'В файловой ИБ минимальный период запуска регламента %1 секунд'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, МинПериодРегламентаСек);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Объект.ПериодОбработкиОчередиСек = МинПериодРегламентаСек;
	КонецЕсли;

	УправлениеЭлементами(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПростаяНастройкаРегламентаПриИзменении(Элемент)
	УправлениеЭлементами(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеОбработки(Команда)
	
	Обработчик = Новый ОписаниеОповещения("ПослеОкончанияРедактированияРасписания", ЭтаФорма);
	
	РедактированиеРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеОбработки);
	РедактированиеРасписания.Показать(Обработчик);

КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияРедактированияРасписания(Расписание, ПараметрыОповещения) Экспорт
	
	Если Расписание <> Неопределено Тогда
		РасписаниеОбработки = Расписание;
		Модифицированность = Истина;
		УстановитьНадписьРасписанияОбработки(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНадписьРасписанияОбработки(Форма)
	
	РасписаниеОбработки = Форма.РасписаниеОбработки;
	
	Если рдв_РегламентныеЗаданияКлиентСервер.РасписаниеЗадано(РасписаниеОбработки) Тогда
		ТекстЗаголовка = Строка(РасписаниеОбработки);
	Иначе
		ТекстЗаголовка = НСтр("ru='Настроить расписание'");
	КонецЕсли;
	
	Форма.Элементы.НастроитьРасписаниеОбработки.Заголовок = ТекстЗаголовка;
		
КонецПроцедуры

&НаКлиенте
Процедура ИмяПользователяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СписокВыбора = Элементы.ИмяПользователяРегламента.СписокВыбора;
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.ЗагрузитьЗначения(СписокИменПользователейИБ());
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПользователяИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СписокВыбора = Элементы.ИмяПользователяРегламента.СписокВыбора;
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.ЗагрузитьЗначения(СписокИменПользователейИБ());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиЖурналОчередейПриИзменении(Элемент)
	УправлениеЭлементами(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементами(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ИспользованиеРегламента = Форма.ИспользованиеРегламента; 
	ЧастыйЗапускРегламента = Объект.ПериодОбработкиОчередиСек < Форма.МинПериодРегламентаСек;
	ПростаяНастройкаРегламента = Объект.ПростаяНастройкаРегламента;
	ЭтоФайловаяИБ = Форма.ЭтоФайловаяИБ;                                
		
	Элементы.ГруппаРегламентОбработки.Доступность = ИспользованиеРегламента;
	Элементы.ГруппаПростаяНастройкаРегламента.Доступность = ПростаяНастройкаРегламента;
	Элементы.ВремяЖизниЗаданияОбработкиМин.Доступность = Не ЭтоФайловаяИБ
		И ЧастыйЗапускРегламента;
		
	Элементы.ГруппаПолнаяНастройкаРегламента.Доступность = Не ПростаяНастройкаРегламента;
	
	Элементы.ХранениеЖурналовДней.Доступность = Объект.ВестиЖурналОчередей;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипОчередиПоУмолчанию()
	
	рдв_РаботаСОчередями.ЗаполнитьТипОчередиПоУмолчанию(Объект);
	
	Модифицированность = Истина;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция СписокИменПользователейИБ()
	Массив = Новый Массив;
	Для Каждого ПользовательИБ Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		Массив.Добавить(ПользовательИБ.Имя);	
	КонецЦикла;
	Возврат Массив;
КонецФункции

#КонецОбласти
