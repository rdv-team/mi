
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеФормой();
	УстановитьВидимостьДоступностьПредставления();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранныеЗначения, ИсточникВыбора)
	
	Если Не ИсточникВыбора.ВладелецФормы = ЭтотОбъект Тогда
		Возврат;
	КонецЕсли;
	
	СистемыДляРегистрации = ВыбранныеВнешниеСистемы(ВнешниеСистемы);
	
	Результат = ЗарегистироватьДанныеКВыгрузке(ВыбранныеЗначения, СистемыДляРегистрации);
	
	ОповеститьПользователя(Результат);

КонецПроцедуры

&НаКлиенте
Процедура ОповеститьПользователя(Результат)
	
	Текст = НСтр("ru = 'Зарегистрировано объектов %1 из %2. %3'");
	Детали = "";
	Если Не Результат.Зарегистрировано = Результат.КоличествоКРегистрации Тогда
		Детали = "Подробности в журнале регистрации.";	
	КонецЕсли;
	Текст = СтрШаблон(Текст, Результат.Зарегистрировано, Результат.КоличествоКРегистрации, Детали);
	ПоказатьОповещениеПользователя("Регистрация объектов",, СокрЛП(Текст));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВнешниеСистемыПриИзменении(Элемент)
	ВнешняяСистемаПриИзмененииНаСервере();
	РазвернутьДеревоМетаданных();
КонецПроцедуры

&НаКлиенте
Процедура ВнешниеСистемыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	Отмеченные = Новый СписокЗначений();
	Для Каждого Значение Из ВнешниеСистемы Цикл 
			Если Значение.Пометка Тогда 
				ЗаполнитьЗначенияСвойств(Отмеченные.Добавить(), Значение);
			КонецЕсли;
		КонецЦикла;
	ПараметрыОткрытия.Вставить("Отмеченные", Отмеченные);
	ПараметрыОткрытия.Вставить("ОписаниеТипов", ВнешниеСистемы.ТипЗначения);
	ПараметрыОткрытия.Вставить("ЗначенияДляВыбора", Элемент.СписокВыбора);
	ПараметрыОткрытия.Вставить("ЗначенияДляВыбораЗаполнены", Элемент.СписокВыбора.Количество() > 0);
	ПараметрыОткрытия.Вставить("ОграничиватьВыборУказаннымиЗначениями", Ложь);
	ПараметрыОткрытия.Вставить("Представление", Элементы.ВнешниеСистемы.Заголовок);
	ПараметрыОткрытия.Вставить("ПараметрыВыбора", Новый Массив());
	ПараметрыОткрытия.Вставить("БыстрыйВыбор", Истина);
	
	ОткрытьФорму("ОбщаяФорма.ВводЗначенийСпискомСФлажками", ПараметрыОткрытия, Элемент);

КонецПроцедуры


&НаКлиенте
Процедура РежимРаботыПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьПредставления();

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОдиночныйОбъект(Команда)
	
	Если РежимРаботыОбработки = 0 
		И Не ЗначениеЗаполнено(ВнешниеСистемы) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоСсылочныеОбъектыМетаданных(ТекущиеДанные.МетаПолноеИмя) Тогда
		ДобавитьРегистрациюВСписокСсылок(ТекущиеДанные.МетаПолноеИмя);
	ИначеЕсли ЭтоРегистры(ТекущиеДанные.МетаПолноеИмя) Тогда
		ДобавитьРегистрациюОтбор(ТекущиеДанные.МетаПолноеИмя);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВсеОбъектыВыбранныхТипов(Команда)
	
	Если РежимРаботыОбработки = 0 
		И Не ЗначениеЗаполнено(ВнешниеСистемы) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Зарегистрировать = ЗарегистрироватьВсеОбъектыВыбранныхТипов(ТекущиеДанные.ПолучитьИдентификатор());
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект); 
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииРегистрацииОбъектовВыбранныхТипов", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Зарегистрировать, ОписаниеОповещения, ПараметрыОжидания); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПриПомощиОтбора(Команда)
	
	Если РежимРаботыОбработки = 0 
		И Не ЗначениеЗаполнено(ВнешниеСистемы) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьРегистрациюОтбор(ТекущиеДанные.МетаПолноеИмя);

КонецПроцедуры

&НаКлиенте
Процедура РезультатЗапроса(Команда)
	
	Если РежимРаботыОбработки = 0 
		И Не ЗначениеЗаполнено(ВнешниеСистемы) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОперацияСРезультатамиЗапроса(Истина);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РазвернутьДеревоМетаданных()
	
	Для Каждого Строка Из ДеревоМетаданных.ПолучитьЭлементы() Цикл
		Элементы.ДеревоМетаданных.Развернуть( Строка.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗавершенииРегистрацииОбъектовВыбранныхТипов(РезультатИзВремХран, ДопПараметры) Экспорт

	Если РезультатИзВремХран = Неопределено Тогда  // пользователь отменил задание
		Возврат;
	КонецЕсли;

	Если РезультатИзВремХран.Статус = "Ошибка" Тогда
		ВызватьИсключение РезультатИзВремХран.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	Результат = ПолучитьИзВременногоХранилища(РезультатИзВремХран.АдресРезультата);
	ОповеститьПользователя(Результат);

КонецПроцедуры

&НаСервере
Функция ЗарегистрироватьВсеОбъектыВыбранныхТипов(ПолучитьИдентификатор)
	
	Строка = ДеревоМетаданных.НайтиПоИдентификатору(ПолучитьИдентификатор);
	
	ИменаМетаданных = ИменаМетаданных(Строка);
    
    ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
    Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения
    		, "Обработка.рдв_ОбслуживаниеИнтеграции.МодульОбъекта.ЗарегистироватьВсеОбъектыВыбранныхТипов"
    		, ИменаМетаданных
    		, ВыбранныеВнешниеСистемы(ВнешниеСистемы)
    		, РежимРаботыОбработки);  
    
КонецФункции

&НаСервере
Функция ИменаМетаданных(Строка)
	
	МассивИмен = Новый Массив;
	
	Если Строка.ПолучитьРодителя() = Неопределено Тогда
		Возврат  МассивИмен;
	КонецЕсли;
	
	Если Строка.ПолучитьЭлементы().Количество() > 0 Тогда
		Для Каждого Стр Из Строка.ПолучитьЭлементы() Цикл
			МассивИмен.Добавить(Стр.МетаПолноеИмя);
		КонецЦикла;
	Иначе
		МассивИмен.Добавить(Строка.МетаПолноеИмя);
	КонецЕсли;
	
	Возврат МассивИмен;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьРегистрациюОтбор(МетаПолноеИмя)
	
	ТекИмяФормы = "Обработка.рдв_ОбслуживаниеИнтеграции.Форма.ВыборОбъектовОтбором";
	ТекПараметры = Новый Структура("ДействиеВыбора, ИмяТаблицы", 
		Истина,
		МетаПолноеИмя);
	ОткрытьФорму(ТекИмяФормы, ТекПараметры, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ВнешняяСистемаПриИзмененииНаСервере()
	
	КУдалению = Новый Массив;
	Для Каждого Стр Из ВнешниеСистемы Цикл
		Если Не Стр.Пометка Тогда
			КУдалению.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из КУдалению Цикл
		ВнешниеСистемы.Удалить(Стр);
	КонецЦикла;
	
	ПрочитатьДеревоМетаданных();
	
КонецПроцедуры

&НаСервере
Функция ЭтотОбъект(ТекущийОбъект = Неопределено) 
	
	Если ТекущийОбъект = Неопределено Тогда
		Возврат РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ПрочитатьДеревоМетаданных()
	
	ДоступныеСистемы = ДоступныеВнешниеСистемы();
	Данные = ЭтотОбъект().СформироватьСтруктуруМетаданных(ДоступныеСистемы);
	
	ЗначениеВРеквизитФормы(Данные.Дерево, "ДеревоМетаданных");
	
	СтруктураПредставленийМетаданных   = Данные.СтруктураПредставлений;
	СтруктураИменМетаданных            = Данные.СтруктураИмен;

КонецПроцедуры

&НаСервере 
Процедура УдалитьСтрокиДереваЗначенийМетаданных(Знач МетаПолноеИмя, СтрокиДерева)
	
	Если ПустаяСтрока(МетаПолноеИмя) Тогда
		Возврат;
	КонецЕсли;
	
	// В текущем наборе
	Фильтр = Новый Структура("МетаПолноеИмя", МетаПолноеИмя);
	Для Каждого СтрокаУдаления Из СтрокиДерева.НайтиСтроки(Фильтр, Ложь) Цикл
		СтрокиДерева.Удалить(СтрокаУдаления);
		// Если это был последний потомок, то удаляем и родителя.
		Если СтрокиДерева.Количество() = 0 Тогда
			РодительскаяСтрока = СтрокиДерева.Родитель;
			Если РодительскаяСтрока.Родитель <> Неопределено Тогда
				РодительскаяСтрока.Родитель.Строки.Удалить(РодительскаяСтрока);
				// И иерархически вниз уже не ходим.
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Удаляем из оставшихся подчиненных.
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		УдалитьСтрокиДереваЗначенийМетаданных(МетаПолноеИмя, СтрокаДерева.Строки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВыбранныеВнешниеСистемы(ВнешниеСистемы)
	
	Выбранные = Новый Массив;
	Для Каждого Стр Из ВнешниеСистемы Цикл
		Если Стр.Пометка Тогда
			Выбранные.Добавить(Стр.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Выбранные;
	
КонецФункции

&НаСервере
Функция ЭтоСсылочныеОбъектыМетаданных(МетаПолноеИмя)
	
	Возврат ЭтотОбъект().ЭтоСсылочныеОбъектыМетаданных(МетаПолноеИмя);
	
КонецФункции

&НаСервере
Функция ЭтоРегистры(МетаПолноеИмя)
	
	Возврат ЭтотОбъект().ЭтоРегистры(МетаПолноеИмя);
	
КонецФункции

&НаКлиенте
Процедура ОперацияСРезультатамиЗапроса(КомандаОперации)
	
	Если КомандаОперации Тогда
		Текст = НСтр("ru = 'Регистрация изменений результата запроса'");
	Иначе
		Текст = НСтр("ru = 'Отмена регистрации изменений результата запроса'");
	КонецЕсли;
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Заголовок", Текст);
	СтруктураПараметров.Вставить("ДействиеВыбора", КомандаОперации);
	СтруктураПараметров.Вставить("РежимВыбора", Истина);
	СтруктураПараметров.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	Если Не ЗначениеЗаполнено(КлючУникальностиФормыВыбораРезультатаЗапроса) Тогда
		КлючУникальностиФормыВыбораРезультатаЗапроса = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.КонсольЗапросов.Форма", СтруктураПараметров, ЭтотОбъект, КлючУникальностиФормыВыбораРезультатаЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРегистрациюВСписокСсылок(МетаПолноеИмя, ЭтоПодбор = Ложь)
	
	ТекИмяФормы = МетаПолноеИмя + ".ФормаВыбора";
	ТекПараметры = Новый Структура();
	ТекПараметры.Вставить("РежимВыбора", Истина);
	ТекПараметры.Вставить("МножественныйВыбор", Истина);
	ТекПараметры.Вставить("ЗакрыватьПриВыборе", ЭтоПодбор);
	ТекПараметры.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.ГруппыИЭлементы);

	ОткрытьФорму(ТекИмяФормы, ТекПараметры, ЭтотОбъект, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ЗарегистироватьДанныеКВыгрузке(ВыбранныеЗначения, ВнешниеСистемы)
	
	КоличествоКРегистрации = 0;
	Зарегистрировано = 0;
	ИдентификаторСобытия = Строка(Новый УникальныйИдентификатор());
	ИдентификаторСообщения = Неопределено;
	РазмерПорции = РазмерПорцииВидаСообщения();
	
	Если ТипЗнч(ВыбранныеЗначения) = Тип("Структура") Тогда
		
		ДанныеВыбора = Неопределено;
		ИмяТаблицы = Неопределено;
		// Результат запроса
		Если ВыбранныеЗначения.Свойство("ДанныеВыбора", ДанныеВыбора)
			И ЭтоАдресВременногоХранилища(ДанныеВыбора) Тогда
				
				РезультатыВыбора = ПолучитьИзВременногоХранилища(ДанныеВыбора);
				Для Каждого РезультатЗапроса Из РезультатыВыбора Цикл
					
					ТЗ = РезультатЗапроса.Выгрузить();
					Для Каждого Стр Из ТЗ Цикл
						
						Успешно = ЗарегистрироватьИзменения(Стр.Ссылка, ВнешниеСистемы, ИдентификаторСобытия
															, ИдентификаторСообщения, РазмерПорции, Зарегистрировано);
						Если Успешно Тогда
							Зарегистрировано = Зарегистрировано + 1;
						КонецЕсли;
					КонецЦикла;
					
					КоличествоКРегистрации = КоличествоКРегистрации + ТЗ.Количество();
					
				КонецЦикла;
		// Результат отбора Регистры
		ИначеЕсли ВыбранныеЗначения.Свойство("ИмяТаблицы", ИмяТаблицы)
					И ЭтоРегистры(ИмяТаблицы) Тогда
		
			Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ВыбранныеЗначения.ИмяТаблицы);
			Набор = Менеджер.СоздатьНаборЗаписей();
			Для Каждого НаборОтбор ИЗ ДанныеВыбора Цикл
				
				Для Каждого Стр Из НаборОтбор Цикл
					Набор.Отбор[Стр.Ключ].Установить(Стр.Значение);
				КонецЦикла;
				
				Успешно = ЗарегистрироватьИзменения(Набор, ВнешниеСистемы, ИдентификаторСобытия
														, ИдентификаторСообщения, РазмерПорции, Зарегистрировано);
				Если Успешно Тогда
					Зарегистрировано = Зарегистрировано + 1;
				КонецЕсли;
				
				КоличествоКРегистрации = КоличествоКРегистрации + 1;
				
			КонецЦикла;
			
		// Результат отбора Ссылки	
		Иначе
			
			Для Каждого Источник Из ДанныеВыбора Цикл
				Успешно = ЗарегистрироватьИзменения(Источник.Ссылка, ВнешниеСистемы, ИдентификаторСобытия
														, ИдентификаторСообщения, РазмерПорции, Зарегистрировано);
				Если Успешно Тогда
					Зарегистрировано = Зарегистрировано + 1;
				КонецЕсли;
			КонецЦикла;
			
			КоличествоКРегистрации = КоличествоКРегистрации + ДанныеВыбора.Количество();
			
		КонецЕсли;
	// Одиночный объект	
	Иначе
		
		Для Каждого Источник Из ВыбранныеЗначения Цикл
			Успешно = ЗарегистрироватьИзменения(Источник, ВнешниеСистемы, ИдентификаторСобытия
															, ИдентификаторСообщения, РазмерПорции, Зарегистрировано);
			Если Успешно Тогда
				Зарегистрировано = Зарегистрировано + 1;
			КонецЕсли;
		КонецЦикла;
		
		КоличествоКРегистрации = КоличествоКРегистрации + ВыбранныеЗначения.Количество();
		
	КонецЕсли;
	
	Ответ = Новый Структура("Зарегистрировано,КоличествоКРегистрации", Зарегистрировано, КоличествоКРегистрации);
	Возврат Ответ;
	
КонецФункции

&НаСервере
Функция ЗарегистрироватьИзменения(Источник, ВнешниеСистемы, ИдентификаторСобытия, ИдентификаторСообщения
																					, РазмерПорции, Зарегистрировано)
	
	Возврат ЭтотОбъект().ЗарегистрироватьИзменения(Источник, ВнешниеСистемы, РежимРаботыОбработки, Зарегистрировано
															, ИдентификаторСообщения, ИдентификаторСобытия, РазмерПорции);
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	ПрочитатьДеревоМетаданных();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьПредставления()
	
	ЭтоРежимРегистрации = РежимРаботыОбработки = 0;
	Элементы.ВнешниеСистемы.Видимость = ЭтоРежимРегистрации;
//	Элементы.ГруппаРегистрация.Заголовок = ?(ЭтоРежимРегистрации, "Зарегистрировать", "Обновить хеши");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступныеВнешниеСистемы()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	рдв_ВнешниеСистемы.Ссылка
	|ИЗ
	|	Справочник.рдв_ВнешниеСистемы КАК рдв_ВнешниеСистемы
	|ГДЕ
	|	НЕ рдв_ВнешниеСистемы.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВнешниеСистемы = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат ВнешниеСистемы;
	
КонецФункции

&НаСервере
Функция РазмерПорцииВидаСообщения()
	
	Если РежимРаботыОбработки = 0 Тогда
		Возврат 1;
	КонецЕсли;

	Возврат ЭтотОбъект().РазмерПорцииВидаСообщения();
	
КонецФункции

#КонецОбласти
