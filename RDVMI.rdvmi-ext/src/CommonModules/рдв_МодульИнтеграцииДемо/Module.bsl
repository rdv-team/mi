#Область МенеджерОбмена

Процедура ЗаполнитьПравилаКонвертацииОбъектов(СвойстваКонвертации, НаправлениеОбмена) Экспорт

	Если НаправлениеОбмена = "Отправка" Тогда
	
		ДобавитьПКО_Справочник_Контрагенты(СвойстваКонвертации);			
		ДобавитьПКО_Справочник_Партнеры(СвойстваКонвертации);			
		ДобавитьПКО_РегистрСведений_КурсыВалют(СвойстваКонвертации);			
		ДобавитьПКО_Справочник_Валюты(СвойстваКонвертации);			
		ДобавитьПКО_Справочник_Кассы_Отправка(СвойстваКонвертации);			
		ДобавитьПКО_Справочник_Организации(СвойстваКонвертации);			
 		ДобавитьПКО_Документ_ЗаказПокупателя(СвойстваКонвертации);			

	Иначе
		
		ДобавитьПКО_Справочник_Контрагенты(СвойстваКонвертации);			
		ДобавитьПКО_РегистрСведений_КурсыВалют(СвойстваКонвертации);			
		ДобавитьПКО_Справочник_Кассы_Получение(СвойстваКонвертации);			
		ДобавитьПКО_Справочник_КассыККМ_Получение(СвойстваКонвертации);			
 		ДобавитьПКО_Справочник_Организации(СвойстваКонвертации);			
		
	КонецЕсли;
	
КонецПроцедуры

Функция ИмяИБ() Экспорт

	Возврат "RDV1";	
	
КонецФункции

#Область ПКО
Процедура ДобавитьПКО_Справочник_Контрагенты(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКонтрагенты);
	ПКО.ИмяОбъекта = "Справочник.Контрагенты";
	ПКО.ИмяПКО = "Справочник_Контрагенты";

	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Партнер", "Партнер",,"Справочник_Партнеры");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование");
	ДобавитьПКС(КонвертацияШапки, "ВидКонтрагента", "рдв_ВидКонтрагента");

	ТаблЧасть = ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, "КонтактнаяИнформация", "КонтактнаяИнформация");
	ДобавитьПКС(ТаблЧасть, "Тип", "Тип");
	ДобавитьПКС(ТаблЧасть, "Вид", "Вид");
	ДобавитьПКС(ТаблЧасть, "Представление", "Представление");
	
	ПоляПоиска = ПКО.ПоляПоиска;
	ДобавитьПоляПоиска(ПоляПоиска, "Код");
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Партнеры(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоПартнеры);
	ПКО.ИмяОбъекта = "Справочник.Партнеры";
	ПКО.ИмяПКО = "Справочник_Партнеры";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_РегистрСведений_КурсыВалют(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.РегистрыСведений.КурсыВалют);
	ПКО.ИмяОбъекта = "РегистрСведений.КурсыВалют";
	ПКО.ИмяПКО = "РегистрСведений_КурсыВалют";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Валюта", "Валюта", Истина, "Справочник_Валюты");
	ДобавитьПКС(КонвертацияШапки, "Период", "Период");
	ДобавитьПКС(КонвертацияШапки, "Курс", "Курс", Истина);
	ДобавитьПКС(КонвертацияШапки, "Кратность", "Кратность", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Валюты(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники.Валюты);
	ПКО.ИмяОбъекта = "Справочник.Валюты";
	ПКО.ИмяПКО = "Справочник_Валюты";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Кассы_Отправка(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассы);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_Кассы";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Кассы_Получение(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассы);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_Кассы";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_КассыККМ_Получение(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассыККМ);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_КассыККМ";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Организации(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоОрганизации);
	ПКО.ИмяОбъекта = "Справочник.Организации";
	ПКО.ИмяПКО = "Справочник_Организации";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Документ_ЗаказПокупателя(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Документы._ДемоЗаказПокупателя);
	ПКО.ИмяОбъекта = "Документ.ЗаказПокупателя";
	ПКО.ИмяПКО = "Документ_РасходныйКассовыйОрдер";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Номер", "Номер", Истина);
	ДобавитьПКС(КонвертацияШапки, "Дата", "Дата", Истина);
	ДобавитьПКС(КонвертацияШапки, "Контрагент", "Контрагент",, "Справочник_Контрагенты");
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыФункции
// см. рдв_МенеджерОбмена.ДобавитьПКО
Функция ДобавитьПКО(СвойстваКонвертации, МетаданныеОбъекта) 
	
	Возврат рдв_МенеджерОбмена.ДобавитьПКО(СвойстваКонвертации, МетаданныеОбъекта);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьПКС
Функция ДобавитьПКС(Свойства, ИмяРеквизита, ИмяКлючаФормата = "", Обязательный = Ложь, ИмяПКО = "")
	
	Возврат рдв_МенеджерОбмена.ДобавитьПКС(Свойства, ИмяРеквизита, ИмяКлючаФормата, Обязательный, ИмяПКО);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьТаблЧасть
Функция ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, ИмяТаблЧасти, ИмяКлючаФормата = "")
	
	Возврат рдв_МенеджерОбмена.ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, ИмяТаблЧасти, ИмяКлючаФормата);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьПоляПоиска
Процедура ДобавитьПоляПоиска(ПоляПоиска, СписокПолейПоиска)
	
	рдв_МенеджерОбмена.ДобавитьПоляПоиска(ПоляПоиска, СписокПолейПоиска);
	
КонецПроцедуры
#КонецОбласти 

#КонецОбласти

#Область ОбработчикиСобытий

Процедура СправочникиПриЗаписи(Источник, Отказ) Экспорт
	
	ТипИсточника = ТипЗнч(Источник);
		
	Если ТипИсточника = Тип("СправочникОбъект._ДемоКонтрагенты") Тогда
		рдв_РаботаСОчередями.ДобавитьВОчередь("РегистрацияКонтрагентов", Источник.Ссылка);
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.рдв_СообщенияИнтеграции") Тогда
		Если Источник.Направление = Перечисления.рдв_НаправленияСообщенийИнтеграции.Входящее Тогда
			рдв_РаботаСОчередями.ДобавитьВОчередь("ОбработкаВходящихСообщений", Источник.Ссылка);
		КонецЕсли;
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект._ДемоКассы") Тогда
		рдв_РегистрацияИзменений.ЗарегистрироватьИзменения(Источник);
	ИначеЕсли ТипИсточника = Тип("ДокументОбъект._ДемоРасходныйКассовыйОрдер") Тогда
		рдв_РегистрацияИзменений.ЗарегистрироватьИзменения(Источник);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументыПриЗаписи(Источник, Отказ) Экспорт
	
	ТипИсточника = ТипЗнч(Источник);
	Если ТипИсточника = Тип("ДокументОбъект._ДемоЗаказПокупателя") Тогда
		рдв_РегистрацияИзменений.ЗарегистрироватьИзменения(Источник);
	КонецЕсли;

КонецПроцедуры

Процедура НаборыЗаписейПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	ТипИсточника = ТипЗнч(Источник);
  	Если ТипИсточника = Тип("РегистрСведенийНаборЗаписей.КурсыВалют") Тогда
		рдв_РегистрацияИзменений.ЗарегистрироватьИзменения(Источник);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаССервисами

Процедура ОбработатьВходящийЗапрос(ДанныеСервиса, ДанныеЗапроса, Ответ) Экспорт
	
	Ответ = Истина;
	
КонецПроцедуры

Функция ПараметрыСервисаHTTP() Экспорт
	
	ОписаниеИнтерфейса = Новый Структура("ИмяИнтерфейса, ПредставлениеИнтерфейса");
	ОписаниеИнтерфейса.ИмяИнтерфейса = "рдв_Демо";
	ОписаниеИнтерфейса.ПредставлениеИнтерфейса = НСтр("ru = 'Демо (РДВ)'");
	Интерфейс = Справочники.рдв_ИнтерфейсыИнтеграции.ПолучитьИнтерфейс(ОписаниеИнтерфейса);

	ВидСообщения = Справочники.рдв_ВидыСообщенийИнтеграции.ПолучитьВидСообщения(Интерфейс, "exchange");
	
	ПараметрыСервиса = Новый Структура("Интерфейс, ВидСообщения, СтандартнаяСтруктураЗапроса", Интерфейс, ВидСообщения, Истина);
	
	Возврат ПараметрыСервиса;
		
КонецФункции

#КонецОбласти

#Область РегистрацияИзменений

Процедура ЗаполнитьПравилаРегистрации(ПравилаРегистрации) Экспорт
		
	RMQ = Справочники.рдв_ВнешниеСистемы.НайтиПоНаименованию("RMQ");
	HTTP = Справочники.рдв_ВнешниеСистемы.НайтиПоНаименованию("Демо (РДВ)");
	
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКонтрагенты, 
								RMQ, 
								"RMQ",
								"RMQ",
								"exchange",
								"Контрагенты");


	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКонтрагенты, 
								HTTP, 
								"Демо (РДВ)",
								"Демо (РДВ)",
								"exchange",
								"Контрагенты");
							
								
								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.РегистрыСведений.КурсыВалют, 
								RMQ, 
								"RMQ",
								"RMQ",
								"exchange",
								"КурсыВалют");

								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКассы, 
								RMQ, 
								"RMQ",
								"RMQ",
								"exchange",
								"Кассы");

								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Документы._ДемоЗаказПокупателя, 
								RMQ, 
								"RMQ",
								"RMQ",
								"exchange",
								"ЗаказПокупателя");
								
КонецПроцедуры

Процедура ДобавитьПравилоРегистрации(ПравилаРегистрации, 
										МетаданныеОбъекта, 
										ВнешняяСистема, 
										ИмяИнтерфейса = "", 
										ПредставлениеИнтерфейса = "", 
										АдресМетода = "", 
										ИмяВидаСообщения = "")

										
	Интерфейс = Неопределено;
	ВидСообщения = Неопределено;

	Если ЗначениеЗаполнено(ИмяИнтерфейса) Тогда
		ПараметрыСервиса = Новый Структура("ИмяИнтерфейса, ПредставлениеИнтерфейса", ИмяИнтерфейса, ПредставлениеИнтерфейса);
		ДанныеСервиса = Новый Структура("ПараметрыСервиса", ПараметрыСервиса);
		Интерфейс = Справочники.рдв_ИнтерфейсыИнтеграции.ПолучитьИнтерфейс(ПараметрыСервиса);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяВидаСообщения) И ЗначениеЗаполнено(Интерфейс) Тогда
		ВидСообщения = Справочники.рдв_ВидыСообщенийИнтеграции.ПолучитьВидСообщения(Интерфейс, ИмяВидаСообщения);
	КонецЕсли;
											
	ПравилоРегистрации = ПравилаРегистрации.Добавить();
	ПравилоРегистрации.МетаданныеОбъекта = МетаданныеОбъекта;
	ПравилоРегистрации.ВнешняяСистема = ВнешняяСистема;
	ПравилоРегистрации.Интерфейс = Интерфейс;
	ПравилоРегистрации.АдресМетода = АдресМетода;
	ПравилоРегистрации.ВидСообщения = ВидСообщения;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСRMQ

Функция ПараметрыСервисаRMQ() Экспорт
	
	ИмяИнтерфейса = "RMQ";
	ПредставлениеИнтерфейса = НСтр("ru = 'RMQ'");
	
	Параметры = рдв_РаботаССервисами.ПараметрыСервиса(ИмяИнтерфейса, ПредставлениеИнтерфейса);
	
	Возврат Параметры;
		
КонецФункции

#КонецОбласти

