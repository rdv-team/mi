
#Область ПрограммныйИнтерфейс

// Заполняет правила регистрации объектов к выгрузке
//
// Параметры:
//  ПравилаРегистрации - ТаблицаЗначений - Содержит список объектов метаданных, которые необходимо регистрировать
//
Процедура ЗаполнитьПравилаРегистрации(ПравилаРегистрации) Экспорт
		
	RMQ = Справочники.рдв_ВнешниеСистемы.Предопределенный("RMQ");
	HTTP = Справочники.рдв_ВнешниеСистемы.Предопределенный("рдв_Демо");
	
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКонтрагенты, 
								RMQ,
								"exchange");
								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.РегистрыСведений.рдв_ХешиСообщенийИнтеграции, 
								RMQ,
								"exchange");

	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКонтрагенты, 
								HTTP,
								"exchange");
								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоПартнеры, 
								RMQ,
								"exchange");
								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.РегистрыСведений.КурсыВалют, 
								RMQ, 
								"exchange");

								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКассы, 
								RMQ, 
								"exchange");

								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Документы._ДемоЗаказПокупателя, 
								RMQ, 
								"exchange");
								
КонецПроцедуры

// Маршрут сообщения по объекту выгрузки
// 
// Параметры:
//  ИсточникСообщения - ЛюбаяСсылка - см.рдв_РегистрацияИзмененийПереопределяемый.МаршрутСообщения()
// 
// Возвращаемое значение:
//  Строка - Маршрут сообщения
//
Функция МаршрутСообщения(ИсточникСообщения, ВнешняяСистема) Экспорт
	
	Если ИсточникСообщения.Метаданные() = Метаданные.Справочники._ДемоКонтрагенты Тогда
		Возврат "Контрагенты";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Справочники._ДемоПартнеры Тогда
		Возврат "Партнеры";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Справочники._ДемоКассы Тогда
		Возврат "Кассы";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Документы._ДемоЗаказПокупателя Тогда
		Возврат "ЗаказПокупателя";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Справочники.рдв_ВыгружаемыеОбъекты Тогда
		
		Идентификатор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсточникСообщения, "ИдентификаторДанных");
		ОбъектМетаданных = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(Идентификатор);
		
		Возврат ОбъектМетаданных.Имя;
	Иначе
		Возврат ИсточникСообщения.Метаданные().Имя;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьПравилоРегистрации(ПравилаРегистрации,
										МетаданныеОбъекта,
										ВнешняяСистема,
										АдресМетода = "")
											
	ПравилоРегистрации = ПравилаРегистрации.Добавить();
	ПравилоРегистрации.МетаданныеОбъекта = МетаданныеОбъекта;
	ПравилоРегистрации.ВнешняяСистема = ВнешняяСистема;
	ПравилоРегистрации.АдресМетода = АдресМетода;
	
КонецПроцедуры

#КонецОбласти