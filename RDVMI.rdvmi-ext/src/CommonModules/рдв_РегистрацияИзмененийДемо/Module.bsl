
#Область ПрограммныйИнтерфейс

// Заполняет правила регистрации объектов к выгрузке
//
// Параметры:
//  ПравилаРегистрации - ТаблицаЗначений - Содержит список объектов метаданных, которые необходимо регистрировать
//
Процедура ЗаполнитьПравилаРегистрации(ПравилаРегистрации) Экспорт
		
	RMQ = Справочники.рдв_ВнешниеСистемы.Предопределенный("RMQ");
	HTTP = Справочники.рдв_ВнешниеСистемы.Предопределенный("рдв_Демо");
	
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКонтрагенты, 
								RMQ,
								"exchange");
								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.РегистрыСведений.рдв_ХешиСообщенийИнтеграции, 
								RMQ,
								"exchange");

	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКонтрагенты, 
								HTTP,
								"exchange");
								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоПартнеры, 
								RMQ,
								"exchange");
								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.РегистрыСведений.КурсыВалют, 
								RMQ, 
								"exchange");

								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Справочники._ДемоКассы, 
								RMQ, 
								"exchange");

								
	ДобавитьПравилоРегистрации(ПравилаРегистрации, 
								Метаданные.Документы._ДемоЗаказПокупателя, 
								RMQ, 
								"exchange");
								
КонецПроцедуры

// Маршрут сообщения по объекту выгрузки
// 
// Параметры:
//  ИсточникСообщения - ЛюбаяСсылка - см.рдв_РегистрацияИзмененийПереопределяемый.МаршрутСообщения()
// 
// Возвращаемое значение:
//  Строка - Маршрут сообщения
//
Функция МаршрутСообщения(ИсточникСообщения, ВнешняяСистема) Экспорт
	
	Если ИсточникСообщения.Метаданные() = Метаданные.Справочники._ДемоКонтрагенты Тогда
		Возврат "Контрагенты";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Справочники._ДемоПартнеры Тогда
		Возврат "Партнеры";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Справочники._ДемоКассы Тогда
		Возврат "Кассы";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Документы._ДемоЗаказПокупателя Тогда
		Возврат "ЗаказПокупателя";
	ИначеЕсли ИсточникСообщения.Метаданные() = Метаданные.Справочники.рдв_ВыгружаемыеОбъекты Тогда
		
		Идентификатор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсточникСообщения, "ИдентификаторДанных");
		ОбъектМетаданных = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(Идентификатор);
		
		Возврат ОбъектМетаданных.Имя;
	Иначе
		Возврат ИсточникСообщения.Метаданные().Имя;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПКО

Процедура ДобавитьПКО_Справочник_Контрагенты(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКонтрагенты);
	ПКО.ИмяОбъекта = "Справочник.Контрагенты";
	ПКО.ИмяПКО = "Справочник_Контрагенты";

	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Партнер", "Партнер",,"Справочник_Партнеры");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование");
	ДобавитьПКС(КонвертацияШапки, "ВидКонтрагента", "рдв_ВидКонтрагента");

	ТаблЧасть = ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, "КонтактнаяИнформация", "КонтактнаяИнформация");
	ДобавитьПКС(ТаблЧасть, "Тип", "Тип");
	ДобавитьПКС(ТаблЧасть, "Вид", "Вид");
	ДобавитьПКС(ТаблЧасть, "Представление", "Представление");
	
	ПоляПоиска = ПКО.ПоляПоиска;
	ДобавитьПоляПоиска(ПоляПоиска, "Код");
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Партнеры(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоПартнеры);
	ПКО.ИмяОбъекта = "Справочник.Партнеры";
	ПКО.ИмяПКО = "Справочник_Партнеры";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_РегистрСведений_КурсыВалют(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.РегистрыСведений.КурсыВалют);
	ПКО.ИмяОбъекта = "РегистрСведений.КурсыВалют";
	ПКО.ИмяПКО = "РегистрСведений_КурсыВалют";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Валюта", "Валюта", Истина, "Справочник_Валюты");
	ДобавитьПКС(КонвертацияШапки, "Период", "Период");
	ДобавитьПКС(КонвертацияШапки, "Курс", "Курс", Истина);
	ДобавитьПКС(КонвертацияШапки, "Кратность", "Кратность", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Валюты(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники.Валюты);
	ПКО.ИмяОбъекта = "Справочник.Валюты";
	ПКО.ИмяПКО = "Справочник_Валюты";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Кассы_Отправка(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассы);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_Кассы";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Кассы_Получение(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассы);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_Кассы";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_КассыККМ_Получение(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассыККМ);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_КассыККМ";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Организации(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоОрганизации);
	ПКО.ИмяОбъекта = "Справочник.Организации";
	ПКО.ИмяПКО = "Справочник_Организации";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Документ_ЗаказПокупателя(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Документы._ДемоЗаказПокупателя);
	ПКО.ИмяОбъекта = "Документ.ЗаказПокупателя";
	ПКО.ИмяПКО = "Документ_РасходныйКассовыйОрдер";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Номер", "Номер", Истина);
	ДобавитьПКС(КонвертацияШапки, "Дата", "Дата", Истина);
	ДобавитьПКС(КонвертацияШапки, "Контрагент", "Контрагент",, "Справочник_Контрагенты");
	
	ТаблЧасть = ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, "КонтактнаяИнформация", "КонтактнаяИнформация");
	ДобавитьПКС(ТаблЧасть, "Тип", "Тип");
	ДобавитьПКС(ТаблЧасть, "Вид", "Вид");
	ДобавитьПКС(ТаблЧасть, "Представление", "Представление");
	
КонецПроцедуры

Процедура ДобавитьПКО_Документ_СписаниеТоваров(СвойстваКонвертации)
	
	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Документы._ДемоСписаниеТоваров);
	ПКО.ИмяОбъекта = "Документ.СписаниеТоваров";
	ПКО.ИмяПКО = "Документ_СписаниеТоваров";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Номер", "Номер", Истина);
	ДобавитьПКС(КонвертацияШапки, "Дата", "Дата", Истина);
	ДобавитьПКС(КонвертацияШапки, "Организация", "Организация");
	
	ТаблЧасть = ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, "Товары", "Товары");
	ДобавитьПКС(ТаблЧасть, "Номенклатура", "Номенклатура");
	ДобавитьПКС(ТаблЧасть, "Количество", "Количество");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункцииМенеджерОбмена

// см. рдв_МенеджерОбмена.ДобавитьПКО
Функция ДобавитьПКО(СвойстваКонвертации, МетаданныеОбъекта) 
	
	Возврат рдв_МенеджерОбмена.ДобавитьПКО(СвойстваКонвертации, МетаданныеОбъекта);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьПКС
Функция ДобавитьПКС(Свойства, ИмяРеквизита, ИмяКлючаФормата = "", Обязательный = Ложь, ИмяПКО = "")
	
	Возврат рдв_МенеджерОбмена.ДобавитьПКС(Свойства, ИмяРеквизита, ИмяКлючаФормата, Обязательный, ИмяПКО);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьТаблЧасть
Функция ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, ИмяТаблЧасти, ИмяКлючаФормата = "")
	
	Возврат рдв_МенеджерОбмена.ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, ИмяТаблЧасти, ИмяКлючаФормата);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьПоляПоиска
Процедура ДобавитьПоляПоиска(ПоляПоиска, СписокПолейПоиска)
	
	рдв_МенеджерОбмена.ДобавитьПоляПоиска(ПоляПоиска, СписокПолейПоиска);
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияИзмененийСлужебная

Процедура ДобавитьПравилоРегистрации(ПравилаРегистрации,
										МетаданныеОбъекта,
										ВнешняяСистема,
										АдресМетода = "")
											
	ПравилоРегистрации = ПравилаРегистрации.Добавить();
	ПравилоРегистрации.МетаданныеОбъекта = МетаданныеОбъекта;
	ПравилоРегистрации.ВнешняяСистема = ВнешняяСистема;
	ПравилоРегистрации.АдресМетода = АдресМетода;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти