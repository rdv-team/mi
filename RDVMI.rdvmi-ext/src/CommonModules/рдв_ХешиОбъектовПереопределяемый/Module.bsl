
#Область ПрограммныйИнтерфейс

// Новая таблица хешей
// 
// Возвращаемое значение:
//  ТаблицаЗначений:
//	  * ВидХеша - СправочникСсылка.рдв_ВидыХешей
//	  * Хеш - ОпределяемыйТип.рдв_ХешТип
//
Функция НоваяТаблицаХешей() Экспорт
	
	ТаблицаХешей = РегистрыСведений.рдв_ХешиСообщенийИнтеграции.СоздатьНаборЗаписей()
																.ВыгрузитьКолонки("ВидХеша, Хеш,ИнформационнаяБаза");
	
	Возврат ТаблицаХешей;
	
КонецФункции

// Хеш объекта, ранее посчитанный и записанный
//
// Параметры:
//  СсылкаНаОбъект	- ОпределяемыйТип.рдв_ХешируемыйОбъект
//  		- ОпределяемыйТип.рдв_ХешируемыйОбъектОбъект
//  ВидХеша	- СправочникСсылка.рдв_ВидыХешей
//			- Неопределено - будет использоваться вид по умолчанию
//  СтандартнаяОбработка	- Булево
//  ДополнительныеПараметры	- Неопределено, Структура - для случаев переопределения регистра хранения записей
// 
// Возвращаемое значение:
//	Строка,Неопределено
//
Функция ХешСохраненный(СсылкаНаОбъект, ВидХеша, СтандартнаяОбработка = Ложь, ДополнительныеПараметры = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ХешиОбъектов.Хеш КАК Хеш
	|ИЗ
	|	РегистрСведений.рдв_ХешиСообщенийИнтеграции КАК ХешиОбъектов
	|ГДЕ
	|	ХешиОбъектов.Объект = &Объект
	|	И ХешиОбъектов.ВидХеша = &ВидХеша
	|	И ХешиОбъектов.ИнформационнаяБаза = &ИнформационнаяБаза";
	Запрос.УстановитьПараметр("Объект",	 СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидХеша", ВидХеша);
	
	ИнформационнаяБаза = Неопределено;
	Если НЕ ДополнительныеПараметры = Неопределено 
		И ДополнительныеПараметры.Свойство("ИнформационнаяБаза", ИнформационнаяБаза) Тогда
		Запрос.УстановитьПараметр("ИнформационнаяБаза", ИнформационнаяБаза);
	Иначе
		Запрос.УстановитьПараметр("ИнформационнаяБаза", Справочники.рдв_ИнформационныеБазы.Текущая());
	КонецЕсли;
	
	ВыборкаЗапроса = Запрос.Выполнить();
	Если ВыборкаЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаЗапроса.Следующий();
	
	Возврат ВыборкаЗапроса.Хеш;
	
КонецФункции

// Все записанные хеши объекта.
// 
// Параметры:
//  СсылкаНаОбъект - ОпределяемыйТип.рдв_ХешируемыйОбъект - 
//  ДополнительныеПараметры - Структура - 
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Хеши сохраненные
Функция ХешиСохраненные(СсылкаНаОбъект, ДополнительныеПараметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХешиОбъектов.Хеш КАК Хеш,
	|	ХешиОбъектов.ВидХеша,
	|	ХешиОбъектов.ВидХеша.рдв_Идентификатор КАК рдв_Идентификатор
	|ИЗ
	|	РегистрСведений.рдв_ХешиСообщенийИнтеграции КАК ХешиОбъектов
	|ГДЕ
	|	ХешиОбъектов.Объект = &Объект
	|	И ХешиОбъектов.ИнформационнаяБаза = &ИнформационнаяБаза";
	Запрос.УстановитьПараметр("Объект",	 СсылкаНаОбъект);
	ИнформационнаяБаза = Неопределено;
	Если НЕ ДополнительныеПараметры = Неопределено 
		И ДополнительныеПараметры.Свойство("ИнформационнаяБаза", ИнформационнаяБаза) Тогда
		Запрос.УстановитьПараметр("ИнформационнаяБаза", ИнформационнаяБаза);
	Иначе
		Запрос.УстановитьПараметр("ИнформационнаяБаза", Справочники.рдв_ИнформационныеБазы.Текущая());
	КонецЕсли;
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
	
КонецФункции

// Позволяет переопределить функцию расчета стандартного хеша объекта.
// Может использоваться для объектов, у которых нет модуля менеджера для размещения в нем процедуры РассчитатьХеши.
// Вызывается из функции рдв_ХешиОбъектов.ХешСтандартныйОбъекта.
//
// Параметры:
//  Объект				 - ОпределяемыйТип.рдв_ХешируемыйОбъект
//  					- ОпределяемыйТип.рдв_ХешируемыйОбъектОбъект
//  СписокСвойств		 - см. рдв_ХешиОбъектов.ХешируемыеРеквизиты
//  ИсключаяСвойства	 - см. рдв_ХешиОбъектов.ХешируемыеРеквизиты
// Возвращаемое значение:
//	Строка - расчитаный хеш
//
Функция ХешРассчитать(Объект, СписокСвойств, ИсключаяСвойства) Экспорт

	Возврат Неопределено;

КонецФункции

// Позволяет переопределить функцию расчета стандартного хеша коллекции.
// Вызывается из функции рдв_ХешиОбъектов.ХешСтандартныйКоллекции.
//
// Параметры:
//  Коллекция			 - ТаблицаЗначений, Массив, СписокЗначений, ДеревоЗначений, Соответствие
//  Хеш					 - ОпределяемыйТип.рдв_ХешТип - хеш, в этот параметр нужно записать результат расчета
//  СтандартнаяОбработка - Булево - по умолчанию Истина, в этом случае хеш будет рассчитан способом по умолчанию.
//									Если значение параметра установить в Ложь, то в этой процедуре можно реализовать свой способ,
//									которым в конфигурации рассчитывают хеш коллекций.
// Возвращаемое значение:
//	Строка - расчитаный хеш
//
Функция ХешСтандартныйКоллекции(Коллекция) Экспорт

	Возврат Неопределено;

КонецФункции

// Задает объекты с нестандартным расчетом хеша.
// Для таких объектов будет вызвана процедура РассчитатьХеши, размещенная в их модуле менеджера.
// Используется, если у объекта определено несколько видов хеша или расчет хеша отличается от используемого по умолчанию.
// Вызывается из функции рдв_ХешиОбъектов.ИспользуетСтандартныйРасчетХеша.
//
// Параметры:
//	ОбъектыНестандартногоРасчетаХеша - Массив из Строка - полные имена объектов
//
Процедура ПриОпределенииОбъектовНестандартногоРасчетаХеша(ОбъектыНестандартногоРасчетаХеша) Экспорт

	ОбъектыНестандартногоРасчетаХеша.Добавить("Справочник.рдв_ВыгружаемыеОбъекты");

КонецПроцедуры

// Для объектов не стандартного расчета. Реализация специфичных алгоритмов каждого объекта
// 
// Параметры:
//  Объект	- ОпределяемыйТип.рдв_ХешируемыйОбъект
//  	  - ОпределяемыйТип.рдв_ХешируемыйОбъектОбъект
//  ТаблицаХешей - ТаблицаЗначений - см. рдв_ХешиОбъектов.НоваяТаблицаХешей 
//  ВидХеша	- СправочникСсылка.рдв_ВидыХешей
//			- Неопределено - будут рассчитаны хеши всех определенных для объекта видов
//
Процедура ХешПерсональныйРасчет(Объект, ТаблицаХешей, ВидХеша) Экспорт
	
	
КонецПроцедуры

// Хеш вид по умолчанию.
// 
// Возвращаемое значение:
//  СправочникСсылка.рдв_ВидыХешей - Хеш вид по умолчанию
//
Функция ХешВидПоУмолчанию() Экспорт
	
	ВидХеша = Справочники.рдв_ВидыХешей.Предопределенный("Актуальный");
	Возврат  ВидХеша;
	
КонецФункции

// Имя регистра хранения хеша.
// 
// Возвращаемое значение:
//  Строка - Имя регистра хранения хеша
Функция ИмяРегистраХраненияХеша() Экспорт
	
	Возврат "рдв_ХешиСообщенийИнтеграции";
	
КонецФункции

// Переопределение типовой записи в регистр
// 
// Параметры:
//  Объект	- ОпределяемыйТип.рдв_ХешируемыйОбъект
//  		- ОпределяемыйТип.рдв_ХешируемыйОбъектОбъект
//  Таблица - ТаблицаЗначений - см. рдв_ХешиОбъектовПовтИсп.НоваяТаблицаХешей
//  ДополнительныеПараметры - Структура - Дополнительные параметры
// 
// Возвращаемое значение:
//  Булево - Записать хеши
Функция ЗаписатьХеши(Объект, Таблица, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура();
	КонецЕсли;
	
	ДополнительныеСвойства = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры
																		, "ДополнительныеСвойства"
																		, Новый Структура);
	
	Для Каждого СтрокаХеша Из Таблица Цикл
				
		Набор = РегистрыСведений[ИмяРегистраХраненияХеша()].СоздатьНаборЗаписей();
		Набор.Отбор.Объект.Установить(Объект);
		Набор.Отбор.ВидХеша.Установить(СтрокаХеша.ВидХеша);
		Набор.Отбор.ИнформационнаяБаза.Установить(СтрокаХеша.ИнформационнаяБаза);
		
		НоваяЗапись = Набор.Добавить();
		НоваяЗапись.Объект				= Объект;
		НоваяЗапись.ВидХеша				= СтрокаХеша.ВидХеша;
		НоваяЗапись.Хеш					= СтрокаХеша.Хеш;
		НоваяЗапись.ИнформационнаяБаза	= СтрокаХеша.ИнформационнаяБаза;
		НоваяЗапись.ДатаАктуальности 	= ТекущаяДатаСеанса();
		
		Для Каждого Свойство Из ДополнительныеСвойства Цикл
			Набор.ДополнительныеСвойства.Вставить(Свойство.Ключ, Свойство.Значение);
		КонецЦикла;
		Набор.Записать();
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
