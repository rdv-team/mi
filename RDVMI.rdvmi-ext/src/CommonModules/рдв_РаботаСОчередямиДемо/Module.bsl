#Область ПрограмныйИнтерфейс

Процедура ЗаполнитьСписокОчередей(СписокОчередей) Экспорт
	
	СписокОчередей.Добавить("РегистрацияКонтрагентов", 
		НСтр("ru = 'Регистрация контрагентов'"));

	СписокОчередей.Добавить("ОбработкаВходящихСообщений", 
		НСтр("ru = 'Обработка входящих сообщений'"));
		
КонецПроцедуры

Процедура ЗаполнитьТипОчередиПоУмолчанию(ИмяОчереди, ТипОчередиОбъект) Экспорт
	
	Если ИмяОчереди = "РегистрацияКонтрагентов" Тогда
		
		ТипОчередиОбъект.ПорционнаяОбработка = Истина;
		ТипОчередиОбъект.МаксЗаписейВПорции = 4;
				
	ИначеЕсли ИмяОчереди = "ОбработкаВходящихСообщений" Тогда
		
		ТипОчередиОбъект.ПорционнаяОбработка = Истина;
		ТипОчередиОбъект.МаксЗаписейВПорции = 4;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьОбработкуОчереди(ИмяОчереди, ИдентификаторыОчереди, РезультатОбработки) Экспорт
	
	Если ИмяОчереди = "РегистрацияКонтрагентов" Тогда
		ОбработатьОчередьРегистрацияКонтрагентов(ИмяОчереди, ИдентификаторыОчереди, РезультатОбработки);
	ИначеЕсли ИмяОчереди = "ОбработкаВходящихСообщений" Тогда
		ОбработатьОчередьВходящихСообщений(ИмяОчереди, ИдентификаторыОчереди, РезультатОбработки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьОчередьРегистрацияКонтрагентов(ИмяОчереди, ИдентификаторыОчереди, РезультатОбработки)
	
	// Запрос данных очереди
	ДанныеОчереди = рдв_РаботаСОчередями.ПолучитьДанныеОчереди(ИмяОчереди,
		ИдентификаторыОчереди, "Объект, ИдентификаторЗаписи");
		
	Если Не ЗначениеЗаполнено(ДанныеОчереди) Тогда
		Возврат;	
	КонецЕсли;
	
	ОбъектыОчереди = ДанныеОчереди.ВыгрузитьКолонку("Объект"); 
	
	Для Каждого ОбъектОчереди Из ДанныеОчереди Цикл
		рдв_РегистрацияИзменений.ЗарегистрироватьИзменения(ОбъектОчереди.Объект, ОбъектОчереди.ИдентификаторЗаписи);
	КонецЦикла;
	
	ПредставлениеОбъектов = СтрСоединить(ОбъектыОчереди, ", ");
	Комментрарий = НСтр("ru = 'Обработана очередь ""%1"" по объектам: [%2]'");
	Комментрарий = СтрШаблон(Комментрарий, ИмяОчереди, ПредставлениеОбъектов);
	 	
	ЗаписьЖурналаРегистрации("Обработался пример очереди",
		УровеньЖурналаРегистрации.Информация,,
		ПредставлениеОбъектов,
		Комментрарий);
	
КонецПроцедуры

Процедура ОбработатьОчередьВходящихСообщений(ИмяОчереди, ИдентификаторыОчереди, РезультатОбработки)
	
	// Запрос данных очереди
	ДанныеОчереди = рдв_РаботаСОчередями.ПолучитьДанныеОчереди(ИмяОчереди,
		ИдентификаторыОчереди, "Объект, ИдентификаторЗаписи");
		
	Если Не ЗначениеЗаполнено(ДанныеОчереди) Тогда
		Возврат;	
	КонецЕсли;
	
	ОбъектыОчереди = ДанныеОчереди.ВыгрузитьКолонку("Объект"); 
	
	Для Каждого ОбъектОчереди Из ДанныеОчереди Цикл
		
		ЗаписьДанных = РегистрыСведений.рдв_ДанныеСообщенийИнтеграции.СоздатьМенеджерЗаписи();
		ЗаписьДанных.СообщениеИнтеграции = ОбъектОчереди.Объект;
		ЗаписьДанных.Прочитать();
		
		Если ЗаписьДанных.Выбран() Тогда
			ДанныеЗапроса = ЗаписьДанных.ДанныеСообщения.Получить();
			Результат = рдв_ОбменДанными.СообщениеОбменаВОбъектИБ(ДанныеЗапроса);
			
			ВнешняяСистема = Справочники.рдв_ВнешниеСистемы.НайтиПоНаименованию("RMQ");
			рдв_РегистрацияИзменений.ЗарегистрироватьПодтверждениеПолучения(ВнешняяСистема, "exchange", ОбъектОчереди.Объект, Результат);
			
		КонецЕсли;
	КонецЦикла;
	
	ПредставлениеОбъектов = СтрСоединить(ОбъектыОчереди, ", ");
	Комментрарий = НСтр("ru = 'Обработана очередь ""%1"" по объектам: [%2]'");
	Комментрарий = СтрШаблон(Комментрарий, ИмяОчереди, ПредставлениеОбъектов);
	 	
	ЗаписьЖурналаРегистрации("Обработался пример очереди",
		УровеньЖурналаРегистрации.Информация,,
		ПредставлениеОбъектов,
		Комментрарий);
	
КонецПроцедуры


#КонецОбласти