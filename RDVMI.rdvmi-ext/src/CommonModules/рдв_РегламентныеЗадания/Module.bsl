// обработчик РЗ рдв_ВыгрузитьИсходящиеСообщения
//
Процедура РегламентноеЗаданиеВыгрузитьИсходящиеСообщения() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.рдв_ВыгрузитьИсходящиеСообщения);

	ВыгрузитьИсходящиеСообщения();

КонецПроцедуры

// Формирует текст сообщений и выполняет выгрузку данных из РС рдв_СообщенияОбмена
//
Процедура ВыгрузитьИсходящиеСообщения()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	рдв_СообщенияОбмена.ВидСообщения КАК ВидСообщения,
	|	рдв_СообщенияОбмена.ДатаРегистрацииВМиллисекундах КАК ДатаРегистрацииВМиллисекундах,
	|	рдв_СообщенияОбмена.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	рдв_СообщенияОбмена.ВыгружаемыйОбъект КАК ВыгружаемыйОбъект,
	|	рдв_СообщенияОбмена.ДатаРегистрации КАК ДатаРегистрации,
	|	рдв_СообщенияОбмена.ТекстСообщения КАК ТекстСообщения,
	|	рдв_СообщенияОбмена.Статус КАК Статус,
	|	рдв_СообщенияОбмена.ТекстОшибки КАК ТекстОшибки
	|ИЗ
	|	РегистрСведений.рдв_СообщенияОбмена КАК рдв_СообщенияОбмена
	|ГДЕ
	|	рдв_СообщенияОбмена.ВидСообщения = &ВидСообщения
	|	И рдв_СообщенияОбмена.Статус = &Статус
	|
	|УПОРЯДОЧИТЬ ПО
	|	рдв_СообщенияОбмена.ДатаРегистрацииВМиллисекундах";

	Запрос.УстановитьПараметр("Статус", Перечисления.рдв_СтатусыСообщенийОбмена.Новое);
	Запрос.УстановитьПараметр("ВидСообщения", Перечисления.рдв_ВидыСообщенийОбмена.Исходящее);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = рдв_ОбменДанными.ОбъектИБВСообщениеОбмена(Выборка.ВыгружаемыйОбъект);
			Если ЗначениеЗаполнено(ТекстСообщения) Тогда
				РезультатВыгрузки = ВыгрузитьСообщение(ТекстСообщения);
				РегистрыСведений.рдв_СообщенияОбмена.ОбновитьСтатусСообщения(Выборка.ИдентификаторСообщения, РезультатВыгрузки, ТекстСообщения);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//временная заглушка
Функция ВыгрузитьСообщение(ТекстСообщения) 

	Возврат Перечисления.рдв_СтатусыСообщенийОбмена.Отправлено;	
	
КонецФункции

// обработчик РЗ рдв_ОбработатьВходящиеСообщения
//
Процедура РегламентноеЗаданиеОбработатьВходящиеСообщения() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.рдв_ОбработатьВходящиеСообщения);

	ОбработатьВходящиеСообщения();

КонецПроцедуры

// Создает обхекты БД по данным входящих сообщений из РС рдв_СообщенияОбмена
//
Процедура ОбработатьВходящиеСообщения()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	рдв_СообщенияОбмена.ВидСообщения КАК ВидСообщения,
	|	рдв_СообщенияОбмена.ДатаРегистрацииВМиллисекундах КАК ДатаРегистрацииВМиллисекундах,
	|	рдв_СообщенияОбмена.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	рдв_СообщенияОбмена.ВыгружаемыйОбъект КАК ВыгружаемыйОбъект,
	|	рдв_СообщенияОбмена.ДатаРегистрации КАК ДатаРегистрации,
	|	рдв_СообщенияОбмена.ТекстСообщения КАК ТекстСообщения,
	|	рдв_СообщенияОбмена.Статус КАК Статус,
	|	рдв_СообщенияОбмена.ТекстОшибки КАК ТекстОшибки
	|ИЗ
	|	РегистрСведений.рдв_СообщенияОбмена КАК рдв_СообщенияОбмена
	|ГДЕ
	|	рдв_СообщенияОбмена.ВидСообщения = &ВидСообщения
	|	И рдв_СообщенияОбмена.Статус = &Статус
	|
	|УПОРЯДОЧИТЬ ПО
	|	рдв_СообщенияОбмена.ДатаРегистрацииВМиллисекундах";

	Запрос.УстановитьПараметр("Статус", Перечисления.рдв_СтатусыСообщенийОбмена.Новое);
	Запрос.УстановитьПараметр("ВидСообщения", Перечисления.рдв_ВидыСообщенийОбмена.Входящее);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗагруженныйОбъект = рдв_ОбменДанными.СообщениеОбменаВОбъектИБ(Выборка.ТекстСообщения);
			Если ЗагруженныйОбъект <> Неопределено Тогда
				РегистрыСведений.рдв_СообщенияОбмена.ОбновитьСтатусСообщения(Выборка.ИдентификаторСообщения, Перечисления.рдв_СтатусыСообщенийОбмена.Загружено);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
