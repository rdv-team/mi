#Область ПрограммныйИнтерфейс

#Область МенеджерОбменаОбязательныеМетоды

// Заполняет правила конвертации для выгрузки и загрузки.
//
// Параметры:
//  СвойстваКонвертации - Структура - Структура, которая содержит настройки правил конвертации и таблицу ПКО
//  НаправлениеОбмена - Строка - "Отправка" или "Получение.
//
Процедура ЗаполнитьПравилаКонвертацииОбъектов(СвойстваКонвертации, НаправлениеОбмена) Экспорт

	Если НаправлениеОбмена = "Отправка" Тогда
	
		ДобавитьПКО_Справочник_Контрагенты(СвойстваКонвертации);
		ДобавитьПКО_Справочник_Партнеры(СвойстваКонвертации);
		ДобавитьПКО_РегистрСведений_КурсыВалют(СвойстваКонвертации);
		ДобавитьПКО_Справочник_Валюты(СвойстваКонвертации);
		ДобавитьПКО_Справочник_Кассы_Отправка(СвойстваКонвертации);
		ДобавитьПКО_Справочник_Организации(СвойстваКонвертации);
 		ДобавитьПКО_Документ_ЗаказПокупателя(СвойстваКонвертации);
 		ДобавитьПКО_Документ_СписаниеТоваров(СвойстваКонвертации);
 		
 		// Хеши
 		рдв_ФормированиеХешейОбъектов.ДобавитьПКО_ФормированияХешейОбъектов(СвойстваКонвертации, НаправлениеОбмена);

	Иначе
		
		ДобавитьПКО_Справочник_Контрагенты(СвойстваКонвертации);
		ДобавитьПКО_РегистрСведений_КурсыВалют(СвойстваКонвертации);
		ДобавитьПКО_Справочник_Кассы_Получение(СвойстваКонвертации);
		ДобавитьПКО_Справочник_КассыККМ_Получение(СвойстваКонвертации);
 		ДобавитьПКО_Справочник_Организации(СвойстваКонвертации);
 		
		// Хеши
 		рдв_ФормированиеХешейОбъектов.ДобавитьПКО_ФормированияХешейОбъектов(СвойстваКонвертации, НаправлениеОбмена);
		
	КонецЕсли;
	
КонецПроцедуры

// Имя текущей ИБ.
// 
// Возвращаемое значение:
//  Строка -
// 
Функция ИмяИБ() Экспорт

	Возврат "RDV1";	
	
КонецФункции

#КонецОбласти

#Область ВыгрузкаДанных

//	Вызывается перед выгрузкой объекта.
//	В процедуре можно переопределить выгружаемые данные, ПКО или вызвать отказ выгрузки	
//
// Параметры:
//  ДанныеИБ - Структура - Структура, которая содержит реквизиты справочника "Выгружаемые объекты"
//  ПКО - СтрокаТаблицыЗначений - ПКО выгружаемого объекта.
//	Отказ - Булево - Содержит признак необходимости отказа от выгрузки объекта
//
Процедура ПередВыгрузкойОбъекта(ДанныеИБ, ПКО, Отказ) Экспорт
	
	
	
КонецПроцедуры

//	Вызывается до выполнения запроса к БД, но после формирования теста запроса к БД.
//	В процедуре можно переопределить текст запроса к выгружаемым данным	
//
// Параметры:
//  ДанныеИБ - Структура - Структура, которая содержит реквизиты справочника "Выгружаемые объекты"
//  ПКО - СтрокаТаблицыЗначений - ПКО выгружаемого объекта.
//	ТекстЗапроса - Строка - Содержит текст запроса к БД, подготовленный в соответствии с ПКО
//
Процедура ПриФормированииТекстаЗапроса(ДанныеИБ, ПКО, ТекстЗапроса) Экспорт
	
	
	
КонецПроцедуры

//	Вызывается до начала выгрузки объекта, но после формирования данных выгрузки.
//	В процедуре можно переопределить выгружаемые данные	
//
// Параметры:
//  ДанныеИБ - Структура - Структура, которая содержит реквизиты справочника "Выгружаемые объекты"
//  ПКО - СтрокаТаблицыЗначений - ПКО выгружаемого объекта.
//	ВыгружаемыеДанные - Структура - Содержит структуру реквизитов выгружаемого объекта, подготовленную к выгрузке в соответствии с ПКО
//
Процедура ПриВыгрузкеОбъекта(ДанныеИБ, ПКО, ВыгружаемыеДанные) Экспорт
	
	
	
КонецПроцедуры

// Вызывается при выгрузке ссылки при конвертации в структуру примитивных типов согласно ПКО
// 
// Параметры:
//  СсылкаНаОбъект - ЛюбаяСсылка -
//  ВыгружаемыеДанные - Структура - структура к выгрузке из примитивных типов
//
Процедура ПриВыгрузкеСсылки(СсылкаНаОбъект, ВыгружаемыеДанные) Экспорт
	
	
	
КонецПроцедуры

//	Вызывается после формирования текста сообщения выгрузки.
//	В процедуре можно переопределить текст сообщения выгрузки	
//
// Параметры:
//	ВыгружаемыеДанные - Структура - Содержит структуру реквизитов выгружаемого объекта, подготовленную к выгрузке в соответствии с ПКО
//  ДанныеИБ - Структура - Структура, которая содержит реквизиты справочника "Выгружаемые объекты"
//  ПКО - Строка таблицы значений - ПКО выгружаемого объекта.
//	ФорматОбмена - ПеречислениеСсылка.рдв_ФорматыОбмена - формат обмена
//	ТекстСообщения - Строка - Содержит текст сообщения выгрузки
//
Процедура ПослеФормированияТекстаСообщения(ВыгружаемыеДанные, ФорматОбмена, ТекстСообщения) Экспорт
	
	
	
КонецПроцедуры

// Произвольные данные к выгрузке служебных объектов
// 
// Параметры:
//  ДанныеИБ - Структура -
// 
// Возвращаемое значение:
//  Структура - из примитивных типов
//
Функция ПодготовитьПроизвольныеДанныеКВыгрузке(ДанныеИБ) Экспорт
	
	
	
КонецФункции

#КонецОбласти

#Область ЗагрузкаДанных

//	Вызывается после конвертации текста сообщения в структуру загружаемых данных, до конвертации реквизитов в объекты БД.
//	В процедуре можно переопределить структуру загружаемых данных	
//
// Параметры:
//	ЗагружаемыеДанные - Структура - Содержит структуру реквизитов загружаемого объекта, до конвертации реквизитов в объекты БД
//
Процедура ПередКонвертациейЗагружаемыхДанных( ЗагружаемыеДанные) Экспорт
	
	
	
КонецПроцедуры

//	Вызывается перед конвертацией загружаемых данных в объект ИБ.
//	В процедуре можно переопределить свойства загружаемых данных. Если в текущей процедуре будут
//		переопределены свойства, типовой подбор свойст по данным входящего сообщения выполняться не будет
//
// Параметры:
//   СвойстваЗагружаемогоОбъекта - Структура - коллекция свойств загружаемых данных. Реквизиты:
//      * МенеджерОбъекта - Менеджер - Менеджер загружаемого объекта:
//		* ЭтоРегистр - Булево - Признак того, что загружается регистр
//		* ЭтоДокумент - Булево - Признак того, что загружается документ
//		* ЭтоГруппа - Булево - Признак того, что загружается группа справочника
//		* ПКО - Строка таблицы значений - Правило конвертации объекта
//
Процедура ОпределитьСвойстваЗагружаемогоОбъекта(СвойстваЗагружаемогоОбъекта) Экспорт
	
	
	
КонецПроцедуры

//	Вызывается при конвертации ссылочных данных (объектов и реквизитов) в объект ИБ.
//	В процедуре можно выполнить свой произвольный поиск ссылки
//
// Параметры:
//	ЗагружаемыеДанные - Структура - Содержит структуру реквизитов загружаемого объекта, до конвертации реквизитов в объекты БД
//  СвойстваЗагружаемогоОбъекта - Структура - коллекция свойств загружаемых данных. Реквизиты:
//      * МенеджерОбъекта - Менеджер - Менеджер загружаемого объекта:
//		* ЭтоРегистр - Булево - Признак того, что загружается регистр
//		* ЭтоДокумент - Булево - Признак того, что загружается документ
//		* ЭтоГруппа - Булево - Признак того, что загружается группа справочника
//		* ПКО - Строка таблицы значений - Правило конвертации объекта
//
// Возвращаемое значение:
//  СправочникСсылка, ДокументСсылка и т.д.
//
Функция НайтиСсылкуНаОбъект(ЗагружаемыеДанные, СвойстваЗагружаемогоОбъекта) Экспорт
	
	
	
КонецФункции

//	Вызывается при конвертации данных перечислений в перечисление ИБ.
//	В процедуре можно выполнить свой произвольный поиск значения перечисления
//
// Параметры:
//	ДанныеРеквизита - Структура - Содержит структуру, которая содержит данные перечисления
//		* _ТипЗначения - Строка - Имя объекта метаданных перечисления в базе-источнике
//		* _Значение - Строка - Значение перечисления как задано в базе-источнике 
// Возвращаемое значение:
//  ПеречислениеСсылка.
//
Функция ПолучитьЗначениеПеречисления(ДанныеРеквизита) Экспорт

	
	
КонецФункции

//	Вызывается при создании объекта ИБ по загружаемым данным.
//	В процедуре можно переопределить создаваемый объект
//
// Параметры:
//	ЗагружаемыеДанные - Структура - Содержит структуру реквизитов загружаемого объекта, после конвертации реквизитов в объекты БД
//  СвойстваЗагружаемогоОбъекта - Структура - коллекция свойств загружаемых данных. Реквизиты:
//      * МенеджерОбъекта - Менеджер - Менеджер загружаемого объекта:
//		* ЭтоРегистр - Булево - Признак того, что загружается регистр
//		* ЭтоДокумент - Булево - Признак того, что загружается документ
//		* ЭтоГруппа - Булево - Признак того, что загружается группа справочника
//		* ПКО - Строка таблицы значений - Правило конвертации объекта
//
// Возвращаемое значение:
//  СправочникОбъект, ДокументОбъект, НаборЗаписей и т.д.
//
Функция ПолучитьЗагружаемыйОбъект(ЗагружаемыеДанные, СвойстваЗагружаемогоОбъекта) Экспорт
	
	
	
КонецФункции

//	Вызывается перед записью объекта ИБ.
//	В процедуре можно дозаполнить загружаемый объект
//
// Параметры:
//	ЗагружаемыйОбъект - ДокументОбъект, СправочникОбъект, НаборЗаписей и т. - Инициализированный объект БД
//	ЗагружаемыеДанные - Структура - Содержит структуру реквизитов загружаемого объекта, после конвертации реквизитов в объекты БД
//
Процедура ПередЗаписьюЗагружаемогоОбъекта(ЗагружаемыйОбъект, ЗагружаемыеДанные) Экспорт
	
	
	
КонецПроцедуры

//	Вызывается после записи объекта ИБ.
//	В процедуре можно выполнить постобработчики после записи объекта
//
// Параметры:
//	ЗагружаемыйОбъект - ДокументОбъект, СправочникОбъект, НаборЗаписей и т. - Инициализированный объект БД
//	ЗагружаемыеДанные - Структура - Содержит структуру реквизитов загружаемого объекта, после конвертации реквизитов в объекты БД
//
Процедура ПослеЗаписиЗагружаемогоОбъекта(ЗагружаемыйОбъект, ЗагружаемыеДанные) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПКО

Процедура ДобавитьПКО_Справочник_Контрагенты(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКонтрагенты);
	ПКО.ИмяОбъекта = "Справочник.Контрагенты";
	ПКО.ИмяПКО = "Справочник_Контрагенты";

	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Партнер", "Партнер",,"Справочник_Партнеры");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование");
	ДобавитьПКС(КонвертацияШапки, "ВидКонтрагента", "рдв_ВидКонтрагента");

	ТаблЧасть = ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, "КонтактнаяИнформация", "КонтактнаяИнформация");
	ДобавитьПКС(ТаблЧасть, "Тип", "Тип");
	ДобавитьПКС(ТаблЧасть, "Вид", "Вид");
	ДобавитьПКС(ТаблЧасть, "Представление", "Представление");
	
	ПоляПоиска = ПКО.ПоляПоиска;
	ДобавитьПоляПоиска(ПоляПоиска, "Код");
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Партнеры(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоПартнеры);
	ПКО.ИмяОбъекта = "Справочник.Партнеры";
	ПКО.ИмяПКО = "Справочник_Партнеры";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_РегистрСведений_КурсыВалют(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.РегистрыСведений.КурсыВалют);
	ПКО.ИмяОбъекта = "РегистрСведений.КурсыВалют";
	ПКО.ИмяПКО = "РегистрСведений_КурсыВалют";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Валюта", "Валюта", Истина, "Справочник_Валюты");
	ДобавитьПКС(КонвертацияШапки, "Период", "Период");
	ДобавитьПКС(КонвертацияШапки, "Курс", "Курс", Истина);
	ДобавитьПКС(КонвертацияШапки, "Кратность", "Кратность", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Валюты(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники.Валюты);
	ПКО.ИмяОбъекта = "Справочник.Валюты";
	ПКО.ИмяПКО = "Справочник_Валюты";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Кассы_Отправка(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассы);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_Кассы";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Кассы_Получение(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассы);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_Кассы";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_КассыККМ_Получение(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоКассыККМ);
	ПКО.ИмяОбъекта = "Справочник.Кассы";
	ПКО.ИмяПКО = "Справочник_КассыККМ";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Владелец", "Владелец",,"Справочник_Организации");
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Справочник_Организации(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Справочники._ДемоОрганизации);
	ПКО.ИмяОбъекта = "Справочник.Организации";
	ПКО.ИмяПКО = "Справочник_Организации";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Код", "Код", Истина);
	ДобавитьПКС(КонвертацияШапки, "Наименование", "Наименование", Истина);
	
КонецПроцедуры

Процедура ДобавитьПКО_Документ_ЗаказПокупателя(СвойстваКонвертации)

	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Документы._ДемоЗаказПокупателя);
	ПКО.ИмяОбъекта = "Документ.ЗаказПокупателя";
	ПКО.ИмяПКО = "Документ_РасходныйКассовыйОрдер";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Номер", "Номер", Истина);
	ДобавитьПКС(КонвертацияШапки, "Дата", "Дата", Истина);
	ДобавитьПКС(КонвертацияШапки, "Контрагент", "Контрагент",, "Справочник_Контрагенты");
	
	ТаблЧасть = ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, "КонтактнаяИнформация", "КонтактнаяИнформация");
	ДобавитьПКС(ТаблЧасть, "Тип", "Тип");
	ДобавитьПКС(ТаблЧасть, "Вид", "Вид");
	ДобавитьПКС(ТаблЧасть, "Представление", "Представление");
	
КонецПроцедуры

Процедура ДобавитьПКО_Документ_СписаниеТоваров(СвойстваКонвертации)
	
	ПКО = ДобавитьПКО(СвойстваКонвертации, Метаданные.Документы._ДемоСписаниеТоваров);
	ПКО.ИмяОбъекта = "Документ.СписаниеТоваров";
	ПКО.ИмяПКО = "Документ_СписаниеТоваров";
	КонвертацияШапки = ПКО.КонвертацияШапки;
	ДобавитьПКС(КонвертацияШапки, "Номер", "Номер", Истина);
	ДобавитьПКС(КонвертацияШапки, "Дата", "Дата", Истина);
	ДобавитьПКС(КонвертацияШапки, "Организация", "Организация");
	
	ТаблЧасть = ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, "Товары", "Товары");
	ДобавитьПКС(ТаблЧасть, "Номенклатура", "Номенклатура");
	ДобавитьПКС(ТаблЧасть, "Количество", "Количество");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункцииМенеджерОбмена

// см. рдв_МенеджерОбмена.ДобавитьПКО
Функция ДобавитьПКО(СвойстваКонвертации, МетаданныеОбъекта) 
	
	Возврат рдв_МенеджерОбмена.ДобавитьПКО(СвойстваКонвертации, МетаданныеОбъекта);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьПКС
Функция ДобавитьПКС(Свойства, ИмяРеквизита, ИмяКлючаФормата = "", Обязательный = Ложь, ИмяПКО = "")
	
	Возврат рдв_МенеджерОбмена.ДобавитьПКС(Свойства, ИмяРеквизита, ИмяКлючаФормата, Обязательный, ИмяПКО);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьТаблЧасть
Функция ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, ИмяТаблЧасти, ИмяКлючаФормата = "")
	
	Возврат рдв_МенеджерОбмена.ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, ИмяТаблЧасти, ИмяКлючаФормата);
	
КонецФункции

//см. рдв_МенеджерОбмена.ДобавитьПоляПоиска
Процедура ДобавитьПоляПоиска(ПоляПоиска, СписокПолейПоиска)
	
	рдв_МенеджерОбмена.ДобавитьПоляПоиска(ПоляПоиска, СписокПолейПоиска);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
