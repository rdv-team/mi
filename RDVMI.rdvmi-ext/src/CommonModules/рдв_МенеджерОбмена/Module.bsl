// Инициализирует правила конвертации для выгрузки и загрузки.
//
// Параметры:
//  НаправлениеОбмена - Строка - "Отправка" или "Получение".
//
// Возвращаемое значение:
//  ТаблицаЗначений с правилами конвертации.
//
Функция ИнициализироватьПравилаКонвертации(НаправлениеОбмена) Экспорт
	
	Возврат рдв_МенеджерОбменаПовтИсп.ИнициализироватьПравилаКонвертации(НаправлениеОбмена);		                                    			
	
КонецФункции

// Возвращает ПКО по объекту метаданных и направлению обмена.
//
// Параметры:
//  МетаданныеОбъекта - Метаданные выгружаемого или загружаемого объекта.
//  НаправлениеОбмена - Строка - "Отправка" или "Получение".
//
// Возвращаемое значение:
//  Строка таблицы значений с ПКО
//
Функция ПравилаКонвертацииОбъекта(МетаданныеОбъекта, НаправлениеОбмена) Экспорт

	ПравилаКонвертации = ИнициализироватьПравилаКонвертации(НаправлениеОбмена);
	ПКО = ПравилаКонвертации.Найти(МетаданныеОбъекта, "МетаданныеОбъекта");
	Возврат ПКО;
	
КонецФункции

// Возвращает ПКО по имени ПКО и направлению обмена.
//
// Параметры:
//  ИмяПКО - Строка - Имя ПКО.
//  НаправлениеОбмена - Строка - "Отправка" или "Получение".
//
// Возвращаемое значение:
//  Строка таблицы значений с ПКО
//
Функция ПравилаКонвертацииПоИмениПКО(ИмяПКО, НаправлениеОбмена) Экспорт

	ПравилаКонвертации = ИнициализироватьПравилаКонвертации(НаправлениеОбмена);
	ПКО = ПравилаКонвертации.Найти(ИмяПКО, "ИмяПКО");
	Возврат ПКО;
	
КонецФункции

// Возвращает ПКО по имени объекта и направлению обмена.
//
// Параметры:
//  ИмяОбъекта - Строка - Имя объекта выгрузки или загрузки.
//  НаправлениеОбмена - Строка - "Отправка" или "Получение".
//
// Возвращаемое значение:
//  Строка таблицы значений с ПКО
//
Функция ПравилаКонвертацииПоИмениОбъекта(ИмяОбъекта, НаправлениеОбмена) Экспорт

	ПравилаКонвертации = ИнициализироватьПравилаКонвертации(НаправлениеОбмена);
	ПКО = ПравилаКонвертации.Найти(ИмяОбъекта, "ИмяОбъекта");
	Возврат ПКО;
	
КонецФункции

// Добавляет ПКО в таблицу ПКО.
//
// Параметры:
//  СвойстваКонвертации - Структура - Структура, которая содержит настройки правил конвертации и таблицу ПКО.
//  МетаданныеОбъекта - Метаданные - Метаданные объекта для которого добавляются ПКО.
//
// Возвращаемое значение:
//  Строка таблицы значений с ПКО
//
Функция ДобавитьПКО(СвойстваКонвертации, МетаданныеОбъекта) Экспорт
	
	ПравилаКонвертации = СвойстваКонвертации.ПравилаКонвертации;
	
	ПКО = ПравилаКонвертации.Найти(МетаданныеОбъекта, "МетаданныеОбъекта");
	Если ПКО = Неопределено Тогда
		ПКО = ПравилаКонвертации.Добавить();
		ПКО.МетаданныеОбъекта = МетаданныеОбъекта;
	КонецЕсли;
	
	ПКО.КонвертацияШапки			= СвойстваКонвертации.ШаблонКонвертацииСвойств.Скопировать();
	ПКО.КонвертацияТабличныхЧастей	= СвойстваКонвертации.ШаблонКонвертацииТабличныхЧастей.Скопировать();
	
	Если Метаданные.Справочники.Содержит(МетаданныеОбъекта) Тогда
		Если МетаданныеОбъекта.Иерархический Тогда
			ДобавитьПКС(ПКО.КонвертацияШапки, "ЭтоГруппа", "ЭтоГруппа", Истина);
		КонецЕсли;
		ДобавитьПКС(ПКО.КонвертацияШапки, "ИмяПредопределенныхДанных", "ИмяПредопределенныхДанных", Истина);
	КонецЕсли;
	
	Если Метаданные.Документы.Содержит(МетаданныеОбъекта) Тогда
		ДобавитьПКС(ПКО.КонвертацияШапки, "Проведен", "Проведен", Истина);
	КонецЕсли;
	
	Если рдв_ОбщегоНазначения.ЭтоМетаданныеСсылки(МетаданныеОбъекта) Тогда
		ДобавитьПКС(ПКО.КонвертацияШапки, "ПометкаУдаления", "ПометкаУдаления", Истина);
	КонецЕсли;
	
	Возврат ПКО;
	
КонецФункции

// Добавляет ПКС (правило конвертации свойств) в таблицу ПКО.
//
// Параметры:
//  Свойства - ТаблицаЗначений - Таблица, которая содержит ПКС.
//  ИмяРеквизита - Строка - Имя реквизита конфигурации.
//	ИмяКлючаФормата - Строка - Представление реквизита в формате обмена.
//	Обязательный - Булево - Признак того, что данное свойство будет выгружаться при выгрузке объекта по ссылке.
//	ИмяПКО - Строка - имя ПКО ссылочных реквизитов.
//
// Возвращаемое значение:
//  Строка таблицы значений с ПКС.
//
Функция ДобавитьПКС(Свойства, ИмяРеквизита, ИмяКлючаФормата = "", Обязательный = Ложь, ИмяПКО = "") Экспорт
	
	Если ИмяКлючаФормата = "" Тогда
		ИмяКлючаФормата = ИмяРеквизита;
	КонецЕсли;
	
	НоваяСтрока = Свойства.Добавить();
	НоваяСтрока.ИмяРеквизита = ИмяРеквизита;
	НоваяСтрока.ИмяКлючаФормата = ИмяКлючаФормата;
	НоваяСтрока.Обязательный = Обязательный;
	НоваяСтрока.ИмяПКО = ИмяПКО;
	
	Возврат НоваяСтрока;
	
КонецФункции

// Добавляет описание табличной части в таблицу ПКО.
//
// Параметры:
//  СвойстваКонвертации - Структура - Структура, которая содержит настройки правил конвертации и таблицу ПКО.
//  ПКО - Строка таблицы значений - Строка, которая содержит ПКО объекта.
//	ИмяТаблЧасти - Строка - Имя табличной части в конфигурации.
//	ИмяКлючаФормата - Строка - Представление табличной части в формате обмена.
//
// Возвращаемое значение:
//  Пустая таблица значений с правилами конвертации свойств табличной части.
//
Функция ДобавитьТаблЧасть(СвойстваКонвертации, ПКО, ИмяТаблЧасти, ИмяКлючаФормата = "") Экспорт
	
	ПКТЧ = ПКО.КонвертацияТабличныхЧастей.Найти(ИмяТаблЧасти, "ИмяТабличнойЧасти");
	Если ПКТЧ <> Неопределено Тогда
		Возврат ПКТЧ.КонвертацияСвойств;
	КонецЕсли;
	
	Если ИмяКлючаФормата = "" Тогда
		ИмяКлючаФормата = ИмяТаблЧасти;
	КонецЕсли;
	
	
	ПКТЧ = ПКО.КонвертацияТабличныхЧастей.Добавить();
	ПКТЧ.ИмяТабличнойЧасти = ИмяТаблЧасти;
	ПКТЧ.ИмяКлючаФормата = ИмяКлючаФормата;
	ПКТЧ.КонвертацияСвойств = СвойстваКонвертации.ШаблонКонвертацииСвойств.Скопировать();
	Возврат ПКТЧ.КонвертацияСвойств;
	
КонецФункции

// Добавляет поля поиска в список полей поиска ПКО.
//
// Параметры:
//  ПоляПоиска - Строка - Строка с полями поиска в которую добавляются поля поиска.
//  СписокПолейПоиска - Строка - Строка со списком полей поиска, разделенными запятыми.
//
Процедура ДобавитьПоляПоиска(ПоляПоиска, СписокПолейПоиска) Экспорт
	
	Если ПоляПоиска = Неопределено Тогда
		ПоляПоиска = "";
	КонецЕсли;
	ПоляПоиска = ПоляПоиска + СписокПолейПоиска;
	
КонецПроцедуры
