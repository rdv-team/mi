
#Область ПрограммныйИнтерфейс

// Справочники при записи. Регистрация изменений к отправке.
// 
// Параметры:
//  Источник - СправочникСсылка - 
//  Отказ - Булево - 
Процедура СправочникиПриЗаписи(Источник, Отказ) Экспорт
	
	ТипИсточника = ТипЗнч(Источник);

	Если ТипИсточника = Тип("СправочникОбъект.рдв_ВыгружаемыеОбъекты") Тогда
		Возврат;
	КонецЕсли;

	// Модуль интеграции - изменяется от проекта к проекту, согласно процессам заказчика
	Модуль = рдв_Интеграция.МодульБизнесЛогикиИнтеграции();
	//@skip-check dynamic-access-method-not-found
	Модуль.СправочникиПриЗаписи(Источник, Отказ);
	
	КонтролироватьЦелостностьДанных = рдв_ФормированиеХешейОбъектовПовтИсп.КонтролироватьЦелостностьДанных();
	Если Не КонтролироватьЦелостностьДанных Тогда
		Возврат;
	КонецЕсли;
		
	рдв_ФормированиеХешейОбъектов.СправочникиПриЗаписи(Источник, Отказ);
	
КонецПроцедуры

// Документы при записи. Регистрация изменений к отправке.
// 
// Параметры:
//  Источник - ДокументСсылка
//  Отказ - Булево
Процедура ДокументыПриЗаписи(Источник, Отказ) Экспорт
	
	Модуль = рдв_Интеграция.МодульБизнесЛогикиИнтеграции();
	//@skip-check dynamic-access-method-not-found
	Модуль.ДокументыПриЗаписи(Источник, Отказ);
	
	КонтролироватьЦелостностьДанных = рдв_ФормированиеХешейОбъектовПовтИсп.КонтролироватьЦелостностьДанных();
	Если Не КонтролироватьЦелостностьДанных Тогда
		Возврат;
	КонецЕсли;
	
	рдв_ФормированиеХешейОбъектов.ДокументыПриЗаписи(Источник, Отказ);

КонецПроцедуры

// Наборы записей при записи. Регистрация изменений к отправке.
// 
// Параметры:
//  Источник - РегистрСведенийНаборЗаписей
//  Отказ - Булево
//  Замещение - Булево
Процедура НаборыЗаписейПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	ТипИсточника = ТипЗнч(Источник);
	Если ТипИсточника = Тип("РегистрСведенийНаборЗаписей.рдв_СообщенияИнтеграции") Тогда
		
		Если Источник.ДополнительныеСвойства.Свойство("ОбновлениеСтатуса") Тогда
			Возврат;
		КонецЕсли;
		
		Если Источник.Количество() > 0 Тогда
			Запись = Источник[0];
			Направление = Запись.Направление;
			Если Направление = Перечисления.рдв_НаправленияСообщенийИнтеграции.Входящее Тогда
				
				Параметры = Новый Структура;
				Параметры.Вставить("ИдентификаторСообщения", Запись.ИдентификаторСообщения);
				рдв_РаботаСОчередями.ДобавитьВОчередь("ОбработкаВходящихСообщений", Неопределено, Параметры);
															
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипИсточника = Тип("РегистрСведенийНаборЗаписей.рдв_ХешиСообщенийИнтеграции") Тогда
		
		ЭтоУдалениеПоВедущему = ЭтоУдалениеПоВедущемуРегистраХешей(Источник);
		
		Если ЭтоУдалениеПоВедущему Тогда
			Возврат;
		КонецЕсли;
		
		ОтборИБ = Источник.Отбор.Найти("ИнформационнаяБаза");
		Если Не ОтборИБ = Неопределено 
			И Не ОтборИБ.Значение = Справочники.рдв_ИнформационныеБазы.Текущая() Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Модуль = рдв_Интеграция.МодульБизнесЛогикиИнтеграции();
	//@skip-check dynamic-access-method-not-found
	Модуль.НаборыЗаписейПриЗаписи(Источник, Отказ, Замещение);
	
	КонтролироватьЦелостностьДанных = рдв_ФормированиеХешейОбъектовПовтИсп.КонтролироватьЦелостностьДанных();
	Если Не КонтролироватьЦелостностьДанных Тогда
		Возврат;
	КонецЕсли;
	
	рдв_ФормированиеХешейОбъектов.НаборыЗаписейПриЗаписи(Источник, Отказ, Замещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Объект в регистре Хешей установлен ведущим. В этом случае очищаются записи по не существующему объекту.
// Т.к. регистр хешей участвует в обменах, то он создает запись по Справочник.рдв_ВыгружаемыеОбъекты, что не верно
Функция ЭтоУдалениеПоВедущемуРегистраХешей(Источник)
	
	Если Источник.Количество() > 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановленОтборКромеОбъекта = Ложь;
	УстановленОтборОбъект = Ложь;
	ЕстьОтборОбъект = Истина;
	Для Каждого Отбор Из Источник.Отбор Цикл
		
		Если Отбор.Имя = "Объект" Тогда
			УстановленОтборОбъект = Отбор.Использование;
			ЕстьОтборОбъект = Истина;
			Продолжить;
		КонецЕсли;
		
		УстановленОтборКромеОбъекта = Отбор.Использование;
		Если УстановленОтборКромеОбъекта Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЕстьОтборОбъект Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если УстановленОтборКромеОбъекта Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не УстановленОтборОбъект Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПредставлениеУдаления = "<Объект не найден>";
	Длина = СтрДлина(ПредставлениеУдаления);
	
	Объект = Источник.Отбор.Объект.Значение;
	Если Не Лев(Объект, Длина) = ПредставлениеУдаления Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Значение = Объект.ПолучитьОбъект();
	
	Возврат Значение = Неопределено;
	
КонецФункции

#КонецОбласти

