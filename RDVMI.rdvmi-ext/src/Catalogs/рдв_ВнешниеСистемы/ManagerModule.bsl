#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьКонфиденциальныеПараметрыАутентификации(ВнешняяСистема, Параметры) Экспорт
	 
	 Возврат ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ВнешняяСистема, Параметры);
	 
 КонецФункции
 
 Процедура УстановитьРасписание(Объект, Расписание, ИспользованиеРегламента, Направление) Экспорт
	
	УстановитьРасписаниеИнтеграции(Объект, Расписание, ИспользованиеРегламента, Направление);	
	
КонецПроцедуры

Процедура УстановитьРасписаниеИнтеграции(Объект, Расписание, Использование, Направление) Экспорт
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(Объект.Наименование);
	
	Если Направление = "Отправка" Тогда
		ИмяРеквизитаПользователь = "ИмяПользователяРегламентаОтправка";
		ИмяРеквизитаРегламентноеЗадание = "РегламентноеЗаданиеGUIDОтправка";
	Иначе
		ИмяРеквизитаПользователь = "ИмяПользователяРегламентаПолучение";
		ИмяРеквизитаРегламентноеЗадание = "РегламентноеЗаданиеGUIDПолучение";
	КонецЕсли;
	
	Если Использование И ПустаяСтрока(Объект[ИмяРеквизитаПользователь]) Тогда
		ИмяПользователя = рдв_ОбщегоНазначения.ИмяИзСинонима(Строка(Объект.Наименование));
		ИмяПользователя = СтрШаблон(НСтр("ru = 'робот_%1_%2'"), ИмяПользователя, Направление);
		Объект[ИмяРеквизитаПользователь] = ИмяПользователя;
	КонецЕсли;
	
	ИмяРегламента = ИмяРегламента(Направление);
	НаименованиеЗадания = НаименованиеРегламента(Объект, Направление);
	//
	МодульУправленияРегламентами = МодульУправленияРегламентами(ИмяРегламента);
	МодульУправленияРегламентами.УстановитьРасписание(ИмяРегламента, Расписание,
		Объект[ИмяРеквизитаРегламентноеЗадание], НаименованиеЗадания, ПараметрыЗадания,
		Объект[ИмяРеквизитаПользователь], Использование);
	
КонецПроцедуры

Функция ИмяРегламента(Направление) Экспорт
	Возврат "рдв_ЗапускИнтеграции"+Направление;
КонецФункции

Функция НаименованиеРегламента(Объект, Направление) Экспорт
	Наименование = НСтр("ru = 'Интеграция: %1 %2'");
	Наименование = СтрШаблон(Наименование, Строка(Объект.Наименование), Направление);
	Возврат Наименование;
КонецФункции

Функция МодульУправленияРегламентами(ИмяРегламента) Экспорт

	Возврат рдв_РегламентныеЗадания;

КонецФункции

Функция ЭтотУзел() Экспорт
	
	Возврат Предопределенный("ЭтотУзел");
	
КонецФункции

#Область ПредопределенныеДанные

// Получает предопредлеленный элемент
// 
// Параметры:
//  ИмяПредопределенного - Строка - 
// 
// Возвращаемое значение:
//  Произвольный - Предопределенный
//
Функция Предопределенный(ИмяПредопределенного, ВызыватьИсключение=Ложь) Экспорт
	
	ОбъектМетаданных = ПустаяСсылка().Метаданные();
	Возврат рдв_ПредопределенныеДанные.Предопределенный(ОбъектМетаданных, ИмяПредопределенного, ВызыватьИсключение);
	
КонецФункции

// Получает все предопредлеленные элементы
// 
// 
// Возвращаемое значение:
//  Структура - Элементы
//
Функция Предопределенные() Экспорт
	
	ОбъектМетаданных = ПустаяСсылка().Метаданные();
	Возврат рдв_ПредопределенныеДанные.Предопределенные(ОбъектМетаданных);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
