
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ДанныеАвторизации = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка, "Пользователь, Пароль");
		Пароль = ?(ЗначениеЗаполнено(ДанныеАвторизации.Пароль), УникальныйИдентификатор, "");
		Пользователь = ?(ЗначениеЗаполнено(ДанныеАвторизации.Пользователь), ДанныеАвторизации.Пользователь, "");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ДанныеРасписания = рдв_РегламентныеЗадания.РасписаниеРегламентаОбработки("рдв_ЗапускИнтеграцииОтправка", Объект.РегламентноеЗаданиеGUIDОтправка);
	Если ДанныеРасписания.Использование Тогда
		ИспользоватьРасписание = Истина;
	КонецЕсли;
	РасписаниеОтправка = ДанныеРасписания.Расписание;
	УстановитьНадписьРасписанияОбработки(ЭтаФорма, "Отправка");

	ДанныеРасписания = рдв_РегламентныеЗадания.РасписаниеРегламентаОбработки("рдв_ЗапускИнтеграцииПолучение", Объект.РегламентноеЗаданиеGUIDПолучение);
	Если ДанныеРасписания.Использование Тогда
		ИспользоватьРасписание = Истина;
	КонецЕсли;
	РасписаниеПолучение = ДанныеРасписания.Расписание;
	УстановитьНадписьРасписанияОбработки(ЭтаФорма, "Получение");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭлементами();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПарольИзменен Тогда
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пароль);
		УстановитьПривилегированныйРежим(Ложь);
		Пароль = ?(ЗначениеЗаполнено(Пароль), УникальныйИдентификатор, "");
	КонецЕсли;
	
	Если ПользовательИзменен Тогда
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пользователь, "Пользователь");
		УстановитьПривилегированныйРежим(Ложь);
		Пользователь = ?(ЗначениеЗаполнено(Пользователь), Пользователь, "");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Справочники.рдв_ВнешниеСистемы.УстановитьРасписание(
		ТекущийОбъект, РасписаниеОтправка, ИспользоватьРасписание, "Отправка");

	УстановитьНадписьРасписанияОбработки(ЭтаФорма, "Отправка");

	Справочники.рдв_ВнешниеСистемы.УстановитьРасписание(
		ТекущийОбъект, РасписаниеПолучение, ИспользоватьРасписание, "Получение");

	УстановитьНадписьРасписанияОбработки(ЭтаФорма, "Получение");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура ТипПриИзменении(Элемент)
	
	УправлениеЭлементами();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ПользовательИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	
	ПарольИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеОбработкиОтправка(Команда)
	Обработчик = Новый ОписаниеОповещения("ПослеОкончанияРедактированияРасписания", ЭтаФорма, Новый Структура("Направление", "Отправка"));
	
	РедактированиеРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеОтправка);
	РедактированиеРасписания.Показать(Обработчик);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеОбработкиПолучение(Команда)
	Обработчик = Новый ОписаниеОповещения("ПослеОкончанияРедактированияРасписания", ЭтаФорма, Новый Структура("Направление", "Получение"));
	
	РедактированиеРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеПолучение);
	РедактированиеРасписания.Показать(Обработчик);
КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияРедактированияРасписания(Расписание, ПараметрыОповещения) Экспорт
	
	Если Расписание <> Неопределено Тогда
		Если ПараметрыОповещения.Направление = "Отправка" Тогда
			РасписаниеОтправка = Расписание;
		Иначе
			РасписаниеПолучение = Расписание;
		КонецЕсли;
		Модифицированность = Истина;
		УстановитьНадписьРасписанияОбработки(ЭтаФорма, ПараметрыОповещения.Направление);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНадписьРасписанияОбработки(Форма, Направление)
	
	Если Направление = "Отправка" Тогда
		РасписаниеОбработки = Форма.РасписаниеОтправка;
		ЭлементРасписаниеОбработки = Форма.Элементы.НастроитьРасписаниеОбработкиОтправка;
	Иначе
		РасписаниеОбработки = Форма.РасписаниеПолучение;
		ЭлементРасписаниеОбработки = Форма.Элементы.НастроитьРасписаниеОбработкиПолучение;
	КонецЕсли;
	
	Если рдв_РегламентныеЗаданияКлиентСервер.РасписаниеЗадано(РасписаниеОбработки) Тогда
		ТекстЗаголовка = Строка(РасписаниеОбработки);
	Иначе
		ТекстЗаголовка = НСтр("ru='Настроить расписание'");
	КонецЕсли;
	
	ЭлементРасписаниеОбработки.Заголовок = ТекстЗаголовка;
		
КонецПроцедуры

&НаКлиенте
Процедура УправлениеЭлементами()
	
	Элементы.НастройкиHTTPСервиса.Видимость = Ложь;
	
	Если Объект.Тип = ПредопределенноеЗначение("Перечисление.рдв_ТипыВнешнихСистем.HTTPСервис") Тогда
		Элементы.НастройкиHTTPСервиса.Видимость = Истина;
		Элементы.НастройкиFTP.Видимость = Ложь;
		Элементы.НастройкиRMQ.Видимость = Ложь;
		Элементы.ГруппаРасписаниеПолучение.Видимость = Ложь;
	ИначеЕсли Объект.Тип = ПредопределенноеЗначение("Перечисление.рдв_ТипыВнешнихСистем.FTP") Тогда
		Элементы.НастройкиFTP.Видимость = Истина;
		Элементы.НастройкиHTTPСервиса.Видимость = Ложь;
		Элементы.НастройкиRMQ.Видимость = Ложь;
		Элементы.ГруппаРасписаниеПолучение.Видимость = Истина;
	ИначеЕсли Объект.Тип = ПредопределенноеЗначение("Перечисление.рдв_ТипыВнешнихСистем.RMQ") Тогда
		Элементы.НастройкиFTP.Видимость = Ложь;
		Элементы.НастройкиHTTPСервиса.Видимость = Ложь;
		Элементы.НастройкиRMQ.Видимость = Истина;
		Элементы.ГруппаРасписаниеПолучение.Видимость = Истина;
	КонецЕсли;
	
	Элементы.ГруппаНастройкиРасписания.Видимость = ИспользоватьРасписание;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРасписаниеПриИзменении(Элемент)
	УправлениеЭлементами();
КонецПроцедуры

&НаКлиенте
Процедура ИмяПользователяРегламентаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
		
	СписокВыбора = Элементы.ИмяПользователяРегламента.СписокВыбора;
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.ЗагрузитьЗначения(СписокИменПользователейИБ());
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбора;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокИменПользователейИБ()
	Массив = Новый Массив;
	Для Каждого ПользовательИБ Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		Массив.Добавить(ПользовательИБ.Имя);	
	КонецЦикла;
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура ИмяПользователяРегламентаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СписокВыбора = Элементы.ИмяПользователяРегламента.СписокВыбора;
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.ЗагрузитьЗначения(СписокИменПользователейИБ());
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


