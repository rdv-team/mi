
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ДанныеАвторизации = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка, "Пользователь, Пароль");
		Пароль = ?(ЗначениеЗаполнено(ДанныеАвторизации.Пароль), УникальныйИдентификатор, "");
		Пользователь = ?(ЗначениеЗаполнено(ДанныеАвторизации.Пользователь), ДанныеАвторизации.Пользователь, "");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ДанныеРасписания = рдв_РегламентныеЗадания.РасписаниеРегламентаОбработки("рдв_ЗапускИнтеграции", Объект.РегламентноеЗаданиеGUID);
	Если ДанныеРасписания.Использование Тогда
		ИспользоватьРасписание = Истина;
	КонецЕсли;
	РасписаниеОбработки = ДанныеРасписания.Расписание;
	УстановитьНадписьРасписанияОбработки(ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭлементами();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПарольИзменен Тогда
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пароль);
		УстановитьПривилегированныйРежим(Ложь);
		Пароль = ?(ЗначениеЗаполнено(Пароль), УникальныйИдентификатор, "");
	КонецЕсли;
	
	Если ПользовательИзменен Тогда
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пользователь, "Пользователь");
		УстановитьПривилегированныйРежим(Ложь);
		Пользователь = ?(ЗначениеЗаполнено(Пользователь), Пользователь, "");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Справочники.рдв_ВнешниеСистемы.УстановитьРасписание(
		ТекущийОбъект, РасписаниеОбработки, ИспользоватьРасписание);

	УстановитьНадписьРасписанияОбработки(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура ТипПриИзменении(Элемент)
	
	УправлениеЭлементами();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ПользовательИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	
	ПарольИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеОбработки(Команда)
	Обработчик = Новый ОписаниеОповещения("ПослеОкончанияРедактированияРасписания", ЭтаФорма);
	
	РедактированиеРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеОбработки);
	РедактированиеРасписания.Показать(Обработчик);
КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияРедактированияРасписания(Расписание, ПараметрыОповещения) Экспорт
	
	Если Расписание <> Неопределено Тогда
		РасписаниеОбработки = Расписание;
		Модифицированность = Истина;
		УстановитьНадписьРасписанияОбработки(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНадписьРасписанияОбработки(Форма)
	
	РасписаниеОбработки = Форма.РасписаниеОбработки;
	
	Если рдв_РегламентныеЗаданияКлиентСервер.РасписаниеЗадано(РасписаниеОбработки) Тогда
		ТекстЗаголовка = Строка(РасписаниеОбработки);
	Иначе
		ТекстЗаголовка = НСтр("ru='Настроить расписание'");
	КонецЕсли;
	
	Форма.Элементы.НастроитьРасписаниеОбработки.Заголовок = ТекстЗаголовка;
		
КонецПроцедуры

&НаКлиенте
Процедура УправлениеЭлементами()
	
	Элементы.НастройкиHTTPСервиса.Видимость = Ложь;
	
	Если Объект.Тип = ПредопределенноеЗначение("Перечисление.рдв_ТипыВнешнихСистем.HTTPСервис") Тогда
		Элементы.НастройкиHTTPСервиса.Видимость = Истина;
		Элементы.НастройкиFTP.Видимость = Ложь;
	ИначеЕсли Объект.Тип = ПредопределенноеЗначение("Перечисление.рдв_ТипыВнешнихСистем.FTP") Тогда
		Элементы.НастройкиFTP.Видимость = Истина;
		Элементы.НастройкиHTTPСервиса.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.НастроитьРасписаниеОбработки.Доступность = ИспользоватьРасписание;
	Элементы.ИмяПользователяРегламента.Доступность = ИспользоватьРасписание;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРасписаниеПриИзменении(Элемент)
	УправлениеЭлементами();
КонецПроцедуры

&НаКлиенте
Процедура ИмяПользователяРегламентаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
		
	СписокВыбора = Элементы.ИмяПользователяРегламента.СписокВыбора;
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.ЗагрузитьЗначения(СписокИменПользователейИБ());
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбора;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокИменПользователейИБ()
	Массив = Новый Массив;
	Для Каждого ПользовательИБ Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		Массив.Добавить(ПользовательИБ.Имя);	
	КонецЦикла;
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура ИмяПользователяРегламентаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СписокВыбора = Элементы.ИмяПользователяРегламента.СписокВыбора;
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.ЗагрузитьЗначения(СписокИменПользователейИБ());
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


