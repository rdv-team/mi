#Область ПрограммныйИнтерфейс

Функция Сообщение(ИдентификаторСообщения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщенияИнтеграции.ИдентификаторСообщения,
	|	СообщенияИнтеграции.ИдентификаторСобытия,
	|	СообщенияИнтеграции.ДатаЗаписиНачалоЧаса,
	|	СообщенияИнтеграции.ВидСообщения,
	|	СообщенияИнтеграции.ДанныеСообщения,
	|	СообщенияИнтеграции.РазмерСообщения,
	|	СообщенияИнтеграции.Направление,
	|	СообщенияИнтеграции.ВнешняяСистема,
	|	СообщенияИнтеграции.АдресМетода,
	|	СообщенияИнтеграции.СтатусОбработки,
	|	СообщенияИнтеграции.ДатаРегистрацииМс
	|ИЗ
	|	РегистрСведений.рдв_СообщенияИнтеграции КАК СообщенияИнтеграции
	|ГДЕ
	|	СообщенияИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения";
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат  Неопределено;
	КонецЕсли;
	
	Структура = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Структура.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Структура, Выборка);
	
	Возврат Структура;
	
КонецФункции

Функция СообщениеВесьКонтекст(ИдентификаторСообщения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщенияИнтеграции.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	СообщенияИнтеграции.ДатаЗаписиНачалоЧаса КАК ДатаЗаписиНачалоЧаса,
	|	СообщенияИнтеграции.ДанныеСообщения КАК ДанныеСообщения,
	|	СообщенияИнтеграции.РазмерСообщения КАК РазмерСообщения
	|ИЗ
	|	РегистрСведений.рдв_СообщенияИнтеграции КАК СообщенияИнтеграции
	|ГДЕ
	|	СообщенияИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыСообщенийИнтеграции.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	ОбъектыСообщенийИнтеграции.ОбъектСообщения КАК ОбъектСообщения,
	|	ОбъектыСообщенийИнтеграции.ДатаЗаписиНачалоЧаса КАК ДатаЗаписиНачалоЧаса,
	|	ОбъектыСообщенийИнтеграции.ДатаСоответствия КАК ДатаСоответствия
	|ИЗ
	|	РегистрСведений.рдв_ОбъектыСообщенийИнтеграции КАК ОбъектыСообщенийИнтеграции
	|ГДЕ
	|	ОбъектыСообщенийИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтекстСообщенийИнтеграции.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	КонтекстСообщенийИнтеграции.ИдентификаторКонтекста КАК ИдентификаторКонтекста,
	|	КонтекстСообщенийИнтеграции.ДатаЗаписиНачалоЧаса КАК ДатаЗаписиНачалоЧаса,
	|	КонтекстСообщенийИнтеграции.Контекст КАК Контекст,
	|	КонтекстСообщенийИнтеграции.ДлительностьМс КАК ДлительностьМс,
	|	КонтекстСообщенийИнтеграции.ДатаОтвета КАК ДатаОтвета,
	|	КонтекстСообщенийИнтеграции.Статус КАК Статус,
	|	КонтекстСообщенийИнтеграции.ДатаСобытия,
	|	КонтекстСообщенийИнтеграции.ДатаСобытияМс КАК ДатаСобытияМс
	|ИЗ
	|	РегистрСведений.рдв_КонтекстСообщенийИнтеграции КАК КонтекстСообщенийИнтеграции
	|ГДЕ
	|	КонтекстСообщенийИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытияМс УБЫВ";	
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	
	Пакет = Запрос.ВыполнитьПакет();
	Структура = Новый Структура;
	СообщенияИнтеграции = Пакет[Пакет.ВГраница()-2].Выгрузить();
	Структура.Вставить("Сообщение", СообщенияИнтеграции);
	Объекты = Пакет[Пакет.ВГраница()-1].Выгрузить();
	Структура.Вставить("Объекты", Объекты);
	Контекст = Пакет[Пакет.ВГраница()].Выгрузить();
	Структура.Вставить("Контекст", Контекст);
	
	Возврат Структура;
	
КонецФункции

Функция СообщениеОбъекты(ИдентификаторСообщения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбъектыСообщенийИнтеграции.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	ОбъектыСообщенийИнтеграции.ОбъектСообщения КАК ОбъектСообщения,
	|	ОбъектыСообщенийИнтеграции.ДатаЗаписиНачалоЧаса КАК ДатаЗаписиНачалоЧаса,
	|	ОбъектыСообщенийИнтеграции.ДатаСоответствия КАК ДатаСоответствия
	|ИЗ
	|	РегистрСведений.рдв_ОбъектыСообщенийИнтеграции КАК ОбъектыСообщенийИнтеграции
	|ГДЕ
	|	ОбъектыСообщенийИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения";	
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	
	Объекты = Запрос.Выполнить().Выгрузить();
	
	Возврат Объекты;
	
КонецФункции

Функция СообщениеДанные(ИдентификаторСообщения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщенияИнтеграции.ДанныеСообщения
	|ИЗ
	|	РегистрСведений.рдв_СообщенияИнтеграции КАК СообщенияИнтеграции
	|ГДЕ
	|	СообщенияИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения";
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат  Неопределено;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Данные = Выборка.Следующий();
	
	Возврат Выборка.ДанныеСообщения;
	
КонецФункции

Функция СообщениеКонтекст(ИдентификаторСообщения, ИдентификаторКонтекста) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КонтекстСообщенийИнтеграции.ИдентификаторСообщения,
		|	КонтекстСообщенийИнтеграции.ИдентификаторКонтекста,
		|	КонтекстСообщенийИнтеграции.ДатаЗаписиНачалоЧаса,
		|	КонтекстСообщенийИнтеграции.Контекст,
		|	КонтекстСообщенийИнтеграции.ДлительностьМс,
		|	КонтекстСообщенийИнтеграции.ДатаСобытия,
		|	КонтекстСообщенийИнтеграции.ДатаСобытияМс КАК ДатаСобытияМс,
		|	КонтекстСообщенийИнтеграции.ДатаОтвета,
		|	КонтекстСообщенийИнтеграции.Статус
		|ИЗ
		|	РегистрСведений.рдв_КонтекстСообщенийИнтеграции КАК КонтекстСообщенийИнтеграции
		|ГДЕ
		|	КонтекстСообщенийИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения
		|	И КонтекстСообщенийИнтеграции.ИдентификаторКонтекста = &ИдентификаторКонтекста
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСобытияМс УБЫВ";
	
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	Запрос.УстановитьПараметр("ИдентификаторКонтекста", ИдентификаторКонтекста);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Колонки = РезультатЗапроса.Колонки;
	Результат = Новый Структура();
	Для Каждого Колонка Из Колонки Цикл
		Результат.Вставить(Колонка.Имя)
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	
КонецФункции

Функция СообщениеКонтекстУдалить(ИдентификаторСообщения) Экспорт
		
	Набор = РегистрыСведений.рдв_КонтекстСообщенийИнтеграции.СоздатьНаборЗаписей();
	Набор.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);
	Набор.Записать();
	
КонецФункции

Функция СообщениеОбъектыУдалить(ИдентификаторСообщения) Экспорт

	Набор = РегистрыСведений.рдв_ОбъектыСообщенийИнтеграции.СоздатьНаборЗаписей();
	Набор.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);
	Набор.Записать();
		
КонецФункции

Функция СообщениеУдалить(ИдентификаторСообщения) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		Набор = СоздатьНаборЗаписей();
		Набор.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);
		Набор.ДополнительныеСвойства.Вставить("ПолноеУдаление", Истина);
		Набор.Записать();
		
		СообщениеКонтекстУдалить(ИдентификаторСообщения);
		СообщениеОбъектыУдалить(ИдентификаторСообщения);
		
		ЗафиксироватьТранзакцию();
		
		Возврат Истина;
		
	Исключение
		
		ОтменитьТранзакцию();
		
		Если ТранзакцияАктивна() Тогда
			ВызватьИсключение;
		КонецЕсли;
		
	КонецПопытки;
	
	Возврат Ложь;
	
КонецФункции

Функция СообщениеАктуальныйКонтекст(ИдентификаторСообщения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КонтекстСообщенийИнтеграции.ИдентификаторСообщения,
	|	КонтекстСообщенийИнтеграции.ДатаСобытияМс
	|ПОМЕСТИТЬ втМаксимумПоПериоду
	|ИЗ
	|	РегистрСведений.рдв_КонтекстСообщенийИнтеграции КАК КонтекстСообщенийИнтеграции
	|ГДЕ
	|	КонтекстСообщенийИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтекстСообщенийИнтеграции.ИдентификаторСообщения,
	|	КонтекстСообщенийИнтеграции.ИдентификаторКонтекста,
	|	КонтекстСообщенийИнтеграции.ДатаЗаписиНачалоЧаса,
	|	КонтекстСообщенийИнтеграции.Контекст,
	|	КонтекстСообщенийИнтеграции.ДлительностьМс,
	|	КонтекстСообщенийИнтеграции.ДатаСобытия,
	|	КонтекстСообщенийИнтеграции.ДатаСобытияМс,
	|	КонтекстСообщенийИнтеграции.ДатаОтвета,
	|	КонтекстСообщенийИнтеграции.Статус
	|ИЗ
	|	РегистрСведений.рдв_КонтекстСообщенийИнтеграции КАК КонтекстСообщенийИнтеграции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМаксимумПоПериоду КАК втМаксимумПоПериоду
	|		ПО втМаксимумПоПериоду.ИдентификаторСообщения = КонтекстСообщенийИнтеграции.ИдентификаторСообщения
	|		И КонтекстСообщенийИнтеграции.ДатаСобытияМс = втМаксимумПоПериоду.ДатаСобытияМс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	рдв_СообщенияИнтеграции.ИдентификаторСообщения,
	|	рдв_СообщенияИнтеграции.ИдентификаторСобытия,
	|	рдв_СообщенияИнтеграции.ДатаЗаписиНачалоЧаса,
	|	рдв_СообщенияИнтеграции.ВидСообщения,
	|	рдв_СообщенияИнтеграции.ДанныеСообщения,
	|	рдв_СообщенияИнтеграции.РазмерСообщения,
	|	рдв_СообщенияИнтеграции.Направление,
	|	рдв_СообщенияИнтеграции.ВнешняяСистема,
	|	рдв_СообщенияИнтеграции.АдресМетода,
	|	рдв_СообщенияИнтеграции.СтатусОбработки,
	|	рдв_СообщенияИнтеграции.ДатаРегистрацииМс
	|ИЗ
	|	РегистрСведений.рдв_СообщенияИнтеграции КАК рдв_СообщенияИнтеграции
	|ГДЕ
	|	рдв_СообщенияИнтеграции.ИдентификаторСообщения = &ИдентификаторСообщения";
	Запрос.УстановитьПараметр("ИдентификаторСообщения", ИдентификаторСообщения);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Структура = Новый Структура;
	
	РезультатЗапроса = Пакет[Пакет.ВГраница()];
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Структура;
	КонецЕсли;
	Колонки = РезультатЗапроса.Колонки;
	Сообщение = Новый Структура();
	Для Каждого Колонка Из Колонки Цикл
		Сообщение.Вставить(Колонка.Имя)
	КонецЦикла;
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Сообщение, Выборка);
	Структура.Вставить("Сообщение", Сообщение);
	
	РезультатЗапроса = Пакет[Пакет.ВГраница()-1];
	Колонки = РезультатЗапроса.Колонки;
	Контекст = Новый Структура();
	Для Каждого Колонка Из Колонки Цикл
		Контекст.Вставить(Колонка.Имя)
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Контекст, Выборка);
	Структура.Вставить("Контекст", Контекст);
	
	Возврат Структура;
	
КонецФункции

Процедура СообщениеОбновитьСтатус(ИдентификаторСообщения, Статус) Экспорт
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);
	Набор.Прочитать();
	
	Запись = Набор[0];
	Запись.СтатусОбработки = Статус;
	Набор.ДополнительныеСвойства.Вставить("ОбновлениеСтатуса", Истина);
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти