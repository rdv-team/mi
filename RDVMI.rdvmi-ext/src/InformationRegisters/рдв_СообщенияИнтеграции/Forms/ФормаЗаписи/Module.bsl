
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеФормой();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВесьКонтекстПриИзменении(Элемент)
	УправлениеВидимостью(ЭтотОбъект);
КонецПроцедуры


&НаКлиенте
Процедура КонтекстПриАктивизацииСтроки(Элемент)
	КонтекстПриАктивизацииСтрокиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьСообщение(Команда)
	
	Если УдалитьСообщениеСервер() Тогда
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.рдв_СообщенияИнтеграции"));
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОткрытьСообщениеВСистемномРедакторе(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПослеПомещенияБольшогоФайла", ЭтотОбъект);
	ВременныйФайл = ПолучитьИмяВременногоФайла("txt");
	Адрес = ПолучитьАдресФайлаНаСервере();
	НачатьПолучениеФайлаССервера(Оповещение, Адрес, ВременныйФайл);
	
	Обещание = ЗапуститьПриложениеАсинх(ВременныйФайл,, Истина);
	Результат = Ждать Обещание;
	
	УдалитьФайлы(ВременныйФайл);

КонецПроцедуры


&НаКлиенте
Процедура СтруктурироватьДанные(Команда)
	СтруктурироватьДанныеНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьФорму()
	
	Менеджер = РегистрыСведений.рдв_СообщенияИнтеграции;
	СвязанныеДанные = Менеджер.СообщениеВесьКонтекст(Запись.ИдентификаторСообщения);
	Контекст.Загрузить(СвязанныеДанные.Контекст);
	Объекты.Загрузить(СвязанныеДанные.Объекты);
	
	Если СвязанныеДанные.Сообщение.Количество() > 0 
		И Запись.РазмерСообщения < ПредельныйРазмерСообщения() Тогда
		СообщениеДанные = СвязанныеДанные.Сообщение[0].ДанныеСообщения.Получить();
	КонецЕсли;
	
	РазместитьДанныеКонтекстаНаФорме(СвязанныеДанные.Контекст);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	ЗаполнитьФорму();
	
	УправлениеВидимостью(ЭтотОбъект); 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	Элементы = Форма.Элементы;
	Запись = Форма.Запись;
	
	Элементы.ВесьКонтекст.Видимость = Форма["Контекст"].Количество() > 1;
	Элементы.ГруппаКонтекстЛево.Видимость = Форма["ВесьКонтекст"] = 1;
	Элементы.ГруппаДатыИнтеграции.Видимость = Форма["ВесьКонтекст"] = 0;
	ПредельныйРазмерСообщения = ПредельныйРазмерСообщения();
	Элементы.ОткрытьСообщениеВСистемномРедакторе.Видимость = Запись.РазмерСообщения > ПредельныйРазмерСообщения;
	Элементы.ФормаСтруктурироватьДанные.Видимость = Не Элементы.ОткрытьСообщениеВСистемномРедакторе.Видимость;
	Элементы.СообщениеДанные.Видимость = НЕ Элементы.ОткрытьСообщениеВСистемномРедакторе.Видимость;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДополнительныеНаборы(ИдентификаторКонтекста, ДополнительныеНаборы)
	
	Если ДополнительныеНаборы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Набор Из ДополнительныеНаборы Цикл
		
		ЗаголовокСтраницы = РазделитьСтрокуПоЗаглавнымБуквам(Набор.Ключ);
		СтраницаИмя = "Группа"+Набор.Ключ;
		Страница = Элементы.Найти(СтраницаИмя);
		Если Страница = Неопределено Тогда
			Страница = рдв_РаботаСФормами.ДобавитьСтраницу(ЭтотОбъект, СтраницаИмя, ЗаголовокСтраницы
															,, Элементы.ГруппаСтраницы);
		КонецЕсли;
		Если ТипЗнч(Набор.Значение) = Тип("Соответствие") Тогда
			
			ТаблицаЗначений = ТаблицаНаФорме(Набор.Ключ);
			
			ЗаписьСуществует = Не ТаблицаЗначений.Найти(ИдентификаторКонтекста, "ИдентификаторКонтекста") = Неопределено;
			Если ЗаписьСуществует Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ЗаписьНабора Из Набор.Значение Цикл
				НоваяСтрока = ТаблицаЗначений.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗаписьНабора);
				НоваяСтрока.ИдентификаторКонтекста = ИдентификаторКонтекста;
			КонецЦикла;
			
			ЭтотОбъект[Набор.Ключ].Загрузить(ТаблицаЗначений);
			
			ИмяЭлементаФормы = СтрШаблон("ДополнительныйНабор_%1", Набор.Ключ);
			ЭлементСуществует = Не Элементы.Найти(ИмяЭлементаФормы) = Неопределено;
			Если Не ЭлементСуществует Тогда
				Таблица = рдв_РаботаСФормами.ДобавитьТаблицу(ЭтотОбъект, ИмяЭлементаФормы
																, ЗаголовокСтраницы, Страница
																,, Набор.Ключ,, ОтображениеТаблицы.Список);
																
				рдв_РаботаСФормами.СоздатьКолонкиТаблицыФормы(ЭтотОбъект, Таблица
																, "Ключ,Значение,ИдентификаторКонтекста");
																
				Элементы[ИмяЭлементаФормы+"ИдентификаторКонтекста"].Видимость = Контекст.Количество() > 1;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ТаблицаНаФорме(ИмяТаблицы)
	
	НаФорме = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтотОбъект, ИмяТаблицы);
	Если НаФорме Тогда
		ТаблицаЗначений = ЭтотОбъект[ИмяТаблицы].Выгрузить();
	Иначе
		ТаблицаЗначений = Новый ТаблицаЗначений;
		ТаблицаЗначений.Колонки.Добавить("ИдентификаторКонтекста");
		ТаблицаЗначений.Колонки.Добавить("Ключ");
		ТаблицаЗначений.Колонки.Добавить("Значение");
	КонецЕсли;
	
	Если Не НаФорме Тогда
		
		МассивРеквизитов = Новый Массив;
		РеквизитТаблица = Новый РеквизитФормы(ИмяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений"));
		МассивРеквизитов.Добавить(РеквизитТаблица);
		Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
			МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов("Строка"), ИмяТаблицы));
		КонецЦикла;
		
		ИзменитьРеквизиты(МассивРеквизитов);
		
	КонецЕсли;
	
	Возврат ТаблицаЗначений;
	
КонецФункции

&НаСервереБезКонтекста
Функция РазделитьСтрокуПоЗаглавнымБуквам(Строка)
	
	МассБукв = Новый Массив();
	Для НомБуквы = 1 По СтрДлина(Строка) Цикл
		ЗнчБуквы = Сред(Строка, НомБуквы, 1);
		Если ЗнчБуквы = ТРег(ЗнчБуквы) И МассБукв.Количество() И МассБукв[МассБукв.ВГраница()] <> ВРег(МассБукв[МассБукв.ВГраница()]) Тогда
			МассБукв.Добавить(" ");
		КонецЕсли;
		МассБукв.Добавить(ЗнчБуквы);
	КонецЦикла;
	Возврат СтрЗаменить(СтрСоединить(МассБукв, ""), "  ", " ");
	
КонецФункции

&НаСервере
Функция УдалитьСообщениеСервер()
	
	Возврат РегистрыСведений.рдв_СообщенияИнтеграции.СообщениеУдалить(Запись.ИдентификаторСообщения);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПредельныйРазмерСообщения()
	Возврат 2000;
КонецФункции

&НаСервере
Функция ПолучитьАдресФайлаНаСервере()
	
	Хранилище = рдв_ИнтеграцияОбщегоНазначения.СообщениеДанные(Запись.ИдентификаторСообщения);
	Адрес = ПоместитьВоВременноеХранилище(Хранилище.Получить());
	Возврат Адрес;
	
КонецФункции

&НаСервере
Процедура РазместитьДанныеКонтекстаНаФорме(Контекст_)
	
	Для а = 0 По Контекст_.Количество()-1 Цикл
		
		Ответ = Контекст_[а].Контекст.Получить();
		Если Ответ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(Ответ) = Тип("Структура") Тогда
			
			Если а = 0 Тогда
				ОтветДанные = Ответ.Ответ;
				Если Не Ответ.Успешно Тогда
					ОтветДанные = Ответ.ТекстОшибки;
				КонецЕсли;
			КонецЕсли;
			
			ДополнительныеНаборы = Неопределено;
			Ответ.Свойство("ДополнительныеНаборы", ДополнительныеНаборы);
			ЗаполнитьДополнительныеНаборы(Контекст_[а].ИдентификаторКонтекста, ДополнительныеНаборы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СтруктурироватьДанныеНаСервере()
	СообщениеДанные = рдв_ИнтеграцияОбщегоНазначения.СтруктурироватьТекстJSON(СообщениеДанные);
	ОтветДанные = рдв_ИнтеграцияОбщегоНазначения.СтруктурироватьТекстJSON(ОтветДанные);
КонецПроцедуры

&НаСервере
Процедура КонтекстПриАктивизацииСтрокиНаСервере()
	
	ТекущаяСтрока = Элементы.Контекст.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Контекст.НайтиПоИдентификатору(ТекущаяСтрока);
	УстановитьКонтекстТранспорта(Запись.ИдентификаторСообщения, ТекущиеДанные.ИдентификаторКонтекста);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКонтекстТранспорта(ИдентификаторСообщения, ИдентификаторКонтекста)
	
	СообщениеКонтекст = РегистрыСведений.рдв_СообщенияИнтеграции.СообщениеКонтекст(ИдентификаторСообщения
													, ИдентификаторКонтекста);
	
	Ответ = СообщениеКонтекст.Контекст.Получить();
	Если Не ТипЗнч(Ответ) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	ОтветДанные = Ответ.Ответ;
	Если Не Ответ.Успешно Тогда
		ОтветДанные = Ответ.ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеПомещенияБольшогоФайла(Результат, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти